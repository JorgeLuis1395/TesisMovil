{"version":3,"sources":["webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.ts","webpack:///src/app/main/apps/mail/dialogs/compose/compose.component.html","webpack:///src/app/main/apps/mail/i18n/en.ts","webpack:///src/app/main/apps/mail/i18n/tr.ts","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.ts","webpack:///src/app/main/apps/mail/mail-details/mail-details.component.html","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component.html","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.ts","webpack:///src/app/main/apps/mail/mail-list/mail-list.component.html","webpack:///src/app/main/apps/mail/mail.component.ts","webpack:///src/app/main/apps/mail/mail.component.html","webpack:///src/app/main/apps/mail/mail.model.ts","webpack:///src/app/main/apps/mail/mail.module.ts","webpack:///src/app/main/apps/mail/mail.service.ts","webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/mail/sidebars/main/main-sidebar.component.html"],"names":["MailComposeDialogComponent","matDialogRef","_data","composeForm","createComposeForm","showExtraToFields","from","value","disabled","to","cc","bcc","subject","message","toggleExtraToFields","selector","templateUrl","styleUrls","encapsulation","None","locale","lang","data","MAIL","COMPOSE","FOLDERS","FILTERS","LABELS","NO_MESSAGES","SELECT_A_MESSAGE_TO_READ","SEARCH_PLACEHOLDER","$event","stopPropagation","MailDetailsComponent","_mailService","showDetails","_unsubscribeAll","onCurrentMailChanged","pipe","subscribe","currentMail","mail","onLabelsChanged","labels","next","complete","event","toggleStar","updateMail","toggleImportant","animations","MailListItemComponent","onSelectedMailsChanged","selectedMails","selected","length","id","toggleSelectedMail","onSelectedChange","MailListComponent","_activatedRoute","_location","onMailsChanged","mails","labelHandle","snapshot","params","filterHandle","folderHandle","go","mailId","setCurrentMail","MailComponent","_fuseSidebarService","_fuseTranslationLoaderService","loadTranslations","searchInput","setTimeout","hasSelectedMails","isIndeterminate","onFoldersChanged","folders","onFiltersChanged","filters","valueChanges","searchText","onSearchTextChanged","toggleSelectAll","filterParameter","filterValue","selectMails","deselectMails","labelId","toggleLabelOnSelectedMails","folderId","setFolderOnSelectedMails","name","getSidebar","toggleOpen","toggleSidebar","Mail","time","read","starred","important","hasAttachments","attachments","folder","routes","path","component","resolve","redirectTo","MailModule","forChild","declarations","imports","providers","entryComponents","MailService","_httpClient","route","state","routeParams","Promise","reject","all","getFolders","getFilters","getLabels","getMails","then","get","response","getMailsByLabel","getMailsByFilter","getMailsByFolder","handle","map","filterArrayByString","index","indexOf","splice","push","find","undefined","filter","post","MailMainSidebarComponent","_matDialog","accounts","creapond","withinpixels","selectedAccount","dialogRef","open","panelClass","afterClosed","actionType","formData","console","log","getRawValue","composeDialog"],"mappings":"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","file":"mail-mail-module-es5.js","sourcesContent":["import { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector     : 'mail-compose',\n    templateUrl  : './compose.component.html',\n    styleUrls    : ['./compose.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComposeDialogComponent\n{\n    showExtraToFields: boolean;\n    composeForm: FormGroup;\n\n    /**\n     * Constructor\n     *\n     * @param {MatDialogRef<MailComposeDialogComponent>} matDialogRef\n     * @param _data\n     */\n    constructor(\n        public matDialogRef: MatDialogRef<MailComposeDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: any\n    )\n    {\n        // Set the defaults\n        this.composeForm = this.createComposeForm();\n        this.showExtraToFields = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create compose form\n     *\n     * @returns {FormGroup}\n     */\n    createComposeForm(): FormGroup\n    {\n        return new FormGroup({\n            from   : new FormControl({\n                value   : 'johndoe@creapond.com',\n                disabled: true\n            }),\n            to     : new FormControl(''),\n            cc     : new FormControl(''),\n            bcc    : new FormControl(''),\n            subject: new FormControl(''),\n            message: new FormControl('')\n        });\n    }\n\n    /**\n     * Toggle extra to fields\n     */\n    toggleExtraToFields(): void\n    {\n        this.showExtraToFields = !this.showExtraToFields;\n    }\n}\n","<div class=\"dialog-content-wrapper\">\n    <mat-toolbar class=\"mat-accent m-0\">\n        <mat-toolbar-row fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <span class=\"title dialog-title\">New Message</span>\n            <button mat-icon-button (click)=\"matDialogRef.close()\" aria-label=\"Close dialog\">\n                <mat-icon>close</mat-icon>\n            </button>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <div mat-dialog-content class=\"p-24 m-0\" fusePerfectScrollbar>\n\n        <form name=\"composeForm\" [formGroup]=\"composeForm\" class=\"compose-form\" fxLayout=\"column\" fxFlex>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>From</mat-label>\n                <input matInput name=\"from\"\n                       formControlName=\"from\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <div class=\"show-hide-extra-fields\" (click)=\"toggleExtraToFields()\">\n                <span [fxShow]=\"!showExtraToFields\">Show CC & BCC</span>\n                <span [fxShow]=\"showExtraToFields\">Hide CC & BCC</span>\n            </div>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>To</mat-label>\n                <input matInput name=\"to\"\n                       formControlName=\"to\"\n                       type=\"email\" required>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Cc</mat-label>\n                <input matInput\n                       name=\"cc\"\n                       formControlName=\"cc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" [fxShow]=\"showExtraToFields\">\n                <mat-label>Bcc</mat-label>\n                <input matInput\n                       name=\"bcc\"\n                       formControlName=\"bcc\"\n                       type=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Subject</mat-label>\n                <input matInput name=\"subject\"\n                       formControlName=\"subject\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Message</mat-label>\n                <textarea matInput name=\"message\"\n                          formControlName=\"message\"\n                          rows=\"6\">\n                </textarea>\n            </mat-form-field>\n\n            <div class=\"attachment-list\">\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-2.doc</span>\n                        <span class=\"size ml-4\">(12 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n\n                <div class=\"attachment\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <div>\n                        <span class=\"filename\">attachment-1.jpg</span>\n                        <span class=\"size ml-4\">(350 Kb)</span>\n                    </div>\n\n                    <button mat-icon-button aria-label=\"Delete attachment\">\n                        <mat-icon class=\"s-16\">close</mat-icon>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    <div mat-dialog-actions class=\"m-0 p-16\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <div>\n            <button mat-raised-button\n                    color=\"accent\"\n                    (click)=\"matDialogRef.close(['send',composeForm])\"\n                    class=\"save-button\"\n                    [disabled]=\"composeForm.invalid\"\n                    aria-label=\"SAVE\">\n                SEND\n            </button>\n\n            <button mat-icon-button matTooltip=\"Attach a file\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n        </div>\n\n        <button mat-icon-button (click)=\"matDialogRef.close(['delete',composeForm])\"\n                aria-label=\"Delete\"\n                matTooltip=\"Delete\">\n            <mat-icon>delete</mat-icon>\n        </button>\n    </div>\n</div>\n","export const locale = {\n    lang: 'en',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'COMPOSE',\n            FOLDERS                 : 'FOLDERS',\n            FILTERS                 : 'FILTERS',\n            LABELS                  : 'LABELS',\n            NO_MESSAGES             : 'There are no messages!',\n            SELECT_A_MESSAGE_TO_READ: 'Select a message to read',\n            SEARCH_PLACEHOLDER      : 'Search for an e-mail or contact'\n        }\n    }\n};\n","export const locale = {\n    lang: 'tr',\n    data: {\n        MAIL: {\n            COMPOSE                 : 'YENİ E-POSTA',\n            FOLDERS                 : 'KLASÖRLER',\n            FILTERS                 : 'FİLTRELER',\n            LABELS                  : 'ETİKETLER',\n            NO_MESSAGES             : 'Mesajiniz bulunmamakta!',\n            SELECT_A_MESSAGE_TO_READ: 'Okumak için bir mesaj seçin',\n            SEARCH_PLACEHOLDER      : 'E-mail yada bir kişi arayın'\n        }\n    }\n};\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-details',\n    templateUrl  : './mail-details.component.html',\n    styleUrls    : ['./mail-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailDetailsComponent implements OnInit, OnDestroy\n{\n    mail: Mail;\n    labels: any[];\n    showDetails: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the defaults\n        this.showDetails = false;\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current mail\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                this.mail = currentMail;\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div *ngIf=\"!mail\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\n    <mat-icon class=\"s-128 mb-16 select-message-icon hint-text\"\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">\n        email\n    </mat-icon>\n    <span class=\"select-message-text hint-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\n        <span>{{ 'MAIL.SELECT_A_MESSAGE_TO_READ' | translate }}</span>\n    </span>\n</div>\n\n<div *ngIf=\"mail\">\n\n    <div class=\"mail-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n        <div>\n            <div class=\"subject\">{{mail.subject}}</div>\n\n            <div class=\"labels mt-8\" fxLayout=\"row wrap\">\n                <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                     fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <div class=\"label-color\" [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                    <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                </div>\n            </div>\n\n        </div>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\n                <mat-icon class=\"amber-fg\" *ngIf=\"mail.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\n                <mat-icon class=\"red-fg\" *ngIf=\"mail.important\">label</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!mail.important\">label_outline</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"mail-content\">\n\n        <div class=\"info\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\n\n            <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div>\n                        <img *ngIf=\"mail.from.avatar\" alt=\"{{mail.from.name}}\"\n                             src=\"{{mail.from.avatar}}\" class=\"avatar\"/>\n\n                        <div *ngIf=\"!mail.from.avatar\" class=\"avatar\" ms-random-class=\"vm.colors\">\n                            {{mail.from.name[0]}}\n                        </div>\n                    </div>\n\n                    <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                        <div class=\"name\">\n                            {{mail.from.name}}\n                        </div>\n\n                        <div class=\"to\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                            <div class=\"to-text\">to</div>\n                            <div>{{mail.to[0].name}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <a class=\"toggle-details\" (click)=\"showDetails = !showDetails\">\n                    <span *ngIf=\"!showDetails\">Show Details</span>\n                    <span *ngIf=\"showDetails\">Hide Details</span>\n                </a>\n\n                <div *ngIf=\"showDetails\" class=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n\n                    <div fxLayout=\"column\">\n                        <span class=\"title\">From:</span>\n                        <span class=\"title\">To:</span>\n                        <span class=\"title\">Date:</span>\n                    </div>\n\n                    <div fxLayout=\"column\">\n                        <span class=\"detail\">{{mail.from.email}}</span>\n                        <span class=\"detail\">{{mail.to[0].email}}</span>\n                        <span class=\"detail\">{{mail.time}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu=\"matMenu\">\n                <button mat-menu-item aria-label=\"Reply\">\n                    <mat-icon>reply</mat-icon>\n                    <span>Reply</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Forward\">\n                    <mat-icon>forward</mat-icon>\n                    <span>Forward</span>\n                </button>\n\n                <button mat-menu-item aria-label=\"Print\">\n                    <mat-icon>print</mat-icon>\n                    <span>Print</span>\n                </button>\n            </mat-menu>\n        </div>\n\n        <div [innerHTML]=\"mail.message\"></div>\n\n    </div>\n\n    <div *ngIf=\"mail.attachments\" class=\"mail-attachments\">\n\n        <div class=\"title\">\n            <span>Attachments</span>\n            ({{mail.attachments.length}})\n        </div>\n\n        <div class=\"attachment-list\" fxLayout=\"row wrap\">\n\n            <div class=\"attachment\" fxLayout=\"column\"\n                 *ngFor=\"let attachment of mail.attachments\">\n\n                <img class=\"preview\" src=\"{{attachment.preview}}\">\n\n                <div fxLayout=\"column\">\n                    <a href=\"#\" onclick=\"event.preventDefault()\">View</a>\n                    <a href=\"#\" onclick=\"event.preventDefault()\">Download</a>\n                    <div class=\"size\">({{attachment.size}})</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list-item',\n    templateUrl  : './mail-list-item.component.html',\n    styleUrls    : ['./mail-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailListItemComponent implements OnInit, OnDestroy\n{\n    @Input() mail: Mail;\n    labels: any[];\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     */\n    constructor(\n        private _mailService: MailService\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.mail = new Mail(this.mail);\n\n        // Subscribe to update on selected mail change\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                this.selected = false;\n\n                if ( selectedMails.length > 0 )\n                {\n                    for ( const mail of selectedMails )\n                    {\n                        if ( mail.id === this.mail.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on label change\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._mailService.toggleSelectedMail(this.mail.id);\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleStar();\n\n        this._mailService.updateMail(this.mail);\n    }\n\n    /**\n     * Toggle Important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.mail.toggleImportant();\n\n        this._mailService.updateMail(this.mail);\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\n                  (click)=\"$event.stopPropagation();\"></mat-checkbox>\n\n    <div class=\"info\" fxFlex FlexLayout=\"column\">\n\n        <div class=\"row-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"name\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\n                <img class=\"avatar\" *ngIf=\"mail.from?.avatar\" alt=\"{{mail.from?.name}}\" src=\"{{mail.from?.avatar}}\"/>\n                <div class=\"avatar accent\" *ngIf=\"!mail.from?.avatar\">{{mail.from?.name[0]}}</div>\n                <span class=\"text-truncate\" *ngIf=\"mail?.from\">{{mail.from?.name}}</span>\n                <mat-icon class=\"s-16 ml-8\" *ngIf=\"mail.hasAttachments\">attachment</mat-icon>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <div class=\"time\">{{mail.time}}</div>\n\n            </div>\n\n        </div>\n\n        <div class=\"row-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\">\n\n                <div class=\"subject text-truncate\">\n                    {{mail.subject}}\n                </div>\n\n                <div class=\"message text-truncate\" *ngIf=\"mail?.message\">\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? '...' : ''}}\n                </div>\n\n                <div class=\"labels\" fxLayout=\"row wrap\" fxHide fxShow.gt-sm>\n                    <div class=\"label\" *ngFor=\"let labelId of mail.labels\"\n                         fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                        <div class=\"label-color\"\n                             [ngStyle]=\"{'background-color': labels | getById:labelId:'color'}\"></div>\n                        <div class=\"label-title\">{{labels | getById:labelId:'title'}}</div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\n@Component({\n    selector     : 'mail-list',\n    templateUrl  : './mail-list.component.html',\n    styleUrls    : ['./mail-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailListComponent implements OnInit, OnDestroy\n{\n    mails: Mail[];\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {MailService} _mailService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _mailService: MailService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update mails on changes\n        this._mailService.onMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(mails => {\n                this.mails = mails;\n            });\n\n        // Subscribe to update current mail on changes\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    // Set the current mail id to null to deselect the current mail\n                    this.currentMail = null;\n\n                    // Handle the location changes\n                    const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n                          folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n                    if ( labelHandle )\n                    {\n                        this._location.go('apps/mail/label/' + labelHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/mail/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/mail/' + folderHandle);\n                    }\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read mail\n     *\n     * @param mailId\n     */\n    readMail(mailId): void\n    {\n        const labelHandle  = this._activatedRoute.snapshot.params.labelHandle,\n              filterHandle = this._activatedRoute.snapshot.params.filterHandle,\n              folderHandle = this._activatedRoute.snapshot.params.folderHandle;\n\n        if ( labelHandle )\n        {\n            this._location.go('apps/mail/label/' + labelHandle + '/' + mailId);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/mail/filter/' + filterHandle + '/' + mailId);\n        }\n        else\n        {\n            this._location.go('apps/mail/' + folderHandle + '/' + mailId);\n        }\n\n        // Set current mail\n        this._mailService.setCurrentMail(mailId);\n    }\n}\n","<div *ngIf=\"mails.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\n    <span class=\"no-messages-text hint-text\">{{ 'MAIL.NO_MESSAGES' | translate }}</span>\n</div>\n\n<div class=\"mail-list\" [@animateStagger]=\"{value:'50'}\">\n    <mail-list-item *ngFor=\"let mail of mails\" [mail]=\"mail\" (click)=\"readMail(mail.id)\"\n                    [ngClass]=\"{'current-mail':mail?.id == currentMail?.id}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </mail-list-item>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\nimport { FuseTranslationLoaderService } from '@fuse/services/translation-loader.service';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\nimport { MailService } from 'app/main/apps/mail/mail.service';\n\nimport { locale as english } from 'app/main/apps/mail//i18n/en';\nimport { locale as turkish } from 'app/main/apps/mail//i18n/tr';\n\n@Component({\n    selector     : 'mail',\n    templateUrl  : './mail.component.html',\n    styleUrls    : ['./mail.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MailComponent implements OnInit, OnDestroy\n{\n    hasSelectedMails: boolean;\n    isIndeterminate: boolean;\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    searchInput: FormControl;\n    currentMail: Mail;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {FuseTranslationLoaderService} _fuseTranslationLoaderService\n     */\n    constructor(\n        private _mailService: MailService,\n        private _fuseSidebarService: FuseSidebarService,\n        private _fuseTranslationLoaderService: FuseTranslationLoaderService\n    )\n    {\n        // Load the translations\n        this._fuseTranslationLoaderService.loadTranslations(english, turkish);\n\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onSelectedMailsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedMails => {\n                setTimeout(() => {\n                    this.hasSelectedMails = selectedMails.length > 0;\n                    this.isIndeterminate = (selectedMails.length !== this._mailService.mails.length && selectedMails.length > 0);\n                }, 0);\n            });\n\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = this._mailService.folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._mailService.filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = this._mailService.labels;\n            });\n\n        this._mailService.onCurrentMailChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentMail => {\n                if ( !currentMail )\n                {\n                    this.currentMail = null;\n                }\n                else\n                {\n                    this.currentMail = currentMail;\n                }\n            });\n\n        this.searchInput.valueChanges.pipe(\n            takeUntil(this._unsubscribeAll),\n            debounceTime(300),\n            distinctUntilChanged()\n        )\n            .subscribe(searchText => {\n                this._mailService.onSearchTextChanged.next(searchText);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._mailService.toggleSelectAll();\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this._mailService.selectMails(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this._mailService.deselectMails();\n    }\n\n    /**\n     * Deselect current mail\n     */\n    deselectCurrentMail(): void\n    {\n        this._mailService.onCurrentMailChanged.next(null);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this._mailService.toggleLabelOnSelectedMails(labelId);\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this._mailService.setFolderOnSelectedMails(folderId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"mail\" class=\"page-layout carded left-sidebar inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- SIDEBAR -->\n    <fuse-sidebar class=\"sidebar\" name=\"mail-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\n        <mail-main-sidebar></mail-main-sidebar>\n    </fuse-sidebar>\n    <!-- / SIDEBAR -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT HEADER -->\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\n                        (click)=\"toggleSidebar('mail-main-sidebar')\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                    <input [formControl]=\"searchInput\" [placeholder]=\"'MAIL.SEARCH_PLACEHOLDER' | translate\" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / CONTENT HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\" [ngClass]=\"{'current-mail-selected':currentMail}\">\n\n            <!-- CONTENT TOOLBAR -->\n            <div class=\"toolbar px-24 py-8\">\n\n                <div class=\"mail-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedMails\"\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"selectMails()\">All</button>\n                        <button mat-menu-item (click)=\"deselectMails()\">None</button>\n                        <button mat-menu-item (click)=\"selectMails('read', true)\">Read</button>\n                        <button mat-menu-item (click)=\"selectMails('read', false)\">Unread</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', true)\">Starred</button>\n                        <button mat-menu-item (click)=\"selectMails('starred', false)\">Unstarred</button>\n                        <button mat-menu-item (click)=\"selectMails('important', true)\">Important</button>\n                        <button mat-menu-item (click)=\"selectMails('important', false)\">Unimportant</button>\n                    </mat-menu>\n\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedMails\"></div>\n\n                    <button mat-icon-button (click)=\"setFolderOnSelectedMails(4)\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">delete</mat-icon>\n                    </button>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"folderMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">folder</mat-icon>\n                    </button>\n                    <mat-menu #folderMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let folder of folders\"\n                                (click)=\"setFolderOnSelectedMails(folder.id)\">{{folder.title}}\n                        </button>\n                    </mat-menu>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedMails\">\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let label of labels\"\n                                (click)=\"toggleLabelOnSelectedMails(label.id)\">{{label.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"currentMail\" fxHide.gt-xs>\n                    <button mat-icon-button (click)=\"deselectCurrentMail()\">\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\n                    </button>\n                </div>\n            </div>\n            <!-- / CONTENT TOOLBAR -->\n\n            <!-- CONTENT -->\n            <div class=\"content\" fxLayout=\"row\">\n\n                <mail-list fusePerfectScrollbar fxFlex></mail-list>\n                <mail-details fusePerfectScrollbar fxFlex></mail-details>\n\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export class Mail\n{\n    id: string;\n    from: {\n        name: string,\n        avatar: string,\n        email: string\n    };\n    to: {\n        name: string,\n        email: string\n    }[];\n    subject: string;\n    message: string;\n    time: string;\n    read: boolean;\n    starred: boolean;\n    important: boolean;\n    hasAttachments: boolean;\n    attachments: {\n        type: string,\n        fileName: string,\n        preview: string,\n        url: string,\n        size: string\n    }[];\n    labels: string[];\n    folder: string;\n\n    /**\n     * Constructor\n     *\n     * @param mail\n     */\n    constructor(mail)\n    {\n        this.id = mail.id;\n        this.from = mail.from;\n        this.to = mail.to;\n        this.subject = mail.subject;\n        this.message = mail.message;\n        this.time = mail.time;\n        this.read = mail.read;\n        this.starred = mail.starred;\n        this.important = mail.important;\n        this.hasAttachments = mail.hasAttachments;\n        this.attachments = mail.attachments;\n        this.labels = mail.labels;\n        this.folder = mail.folder;\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComponent } from 'app/main/apps/mail/mail.component';\nimport { MailListComponent } from 'app/main/apps/mail/mail-list/mail-list.component';\nimport { MailListItemComponent } from 'app/main/apps/mail/mail-list/mail-list-item/mail-list-item.component';\nimport { MailDetailsComponent } from 'app/main/apps/mail/mail-details/mail-details.component';\nimport { MailMainSidebarComponent } from 'app/main/apps/mail/sidebars/main/main-sidebar.component';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\nconst routes: Routes = [\n    {\n        path     : 'label/:labelHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'label/:labelHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path     : ':folderHandle/:mailId',\n        component: MailComponent,\n        resolve  : {\n            mail: MailService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'inbox'\n    }\n];\n\n@NgModule({\n    declarations   : [\n        MailComponent,\n        MailListComponent,\n        MailListItemComponent,\n        MailDetailsComponent,\n        MailMainSidebarComponent,\n        MailComposeDialogComponent\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatToolbarModule,\n\n        TranslateModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers      : [\n        MailService\n    ],\n    entryComponents: [\n        MailComposeDialogComponent\n    ]\n})\nexport class MailModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Mail } from 'app/main/apps/mail/mail.model';\n\n@Injectable()\nexport class MailService implements Resolve<any>\n{\n    mails: Mail[];\n    selectedMails: Mail[];\n    currentMail: Mail;\n    searchText = '';\n\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    routeParams: any;\n\n    onMailsChanged: BehaviorSubject<any>;\n    onSelectedMailsChanged: BehaviorSubject<any>;\n    onCurrentMailChanged: BehaviorSubject<any>;\n    onFoldersChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onLabelsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpClient\n    )\n    {\n        // Set the defaults\n        this.selectedMails = [];\n        this.onMailsChanged = new BehaviorSubject([]);\n        this.onSelectedMailsChanged = new BehaviorSubject([]);\n        this.onCurrentMailChanged = new BehaviorSubject([]);\n        this.onFoldersChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onLabelsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                this.getFolders(),\n                this.getFilters(),\n                this.getLabels(),\n                this.getMails()\n            ]).then(\n                () => {\n                    if ( this.routeParams.mailId )\n                    {\n                        this.setCurrentMail(this.routeParams.mailId);\n                    }\n                    else\n                    {\n                        this.setCurrentMail(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getMails();\n                        }\n                    });\n\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all folders\n     *\n     * @returns {Promise<any>}\n     */\n    getFolders(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-folders')\n                .subscribe((response: any) => {\n                    this.folders = response;\n                    this.onFoldersChanged.next(this.folders);\n                    resolve(this.folders);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all labels\n     *\n     * @returns {Promise<any>}\n     */\n    getLabels(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels')\n                .subscribe((response: any) => {\n                    this.labels = response;\n                    this.onLabelsChanged.next(this.labels);\n                    resolve(this.labels);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all mails\n     *\n     * @returns {Promise<Mail[]>}\n     */\n    getMails(): Promise<Mail[]>\n    {\n        if ( this.routeParams.labelHandle )\n        {\n            return this.getMailsByLabel(this.routeParams.labelHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getMailsByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getMailsByFolder(this.routeParams.folderHandle);\n    }\n\n    /**\n     * Get mails by folder\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFolder(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-folders?handle=' + handle)\n                .subscribe((folders: any) => {\n\n                    const folderId = folders[0].id;\n\n                    this._httpClient.get('api/mail-mails?folder=' + folderId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Get mails by filter\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByFilter(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/mail-mails?' + handle + '=true')\n                .subscribe((mails: any) => {\n\n                    this.mails = mails.map(mail => {\n                        return new Mail(mail);\n                    });\n\n                    this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                    this.onMailsChanged.next(this.mails);\n\n                    resolve(this.mails);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get mails by label\n     *\n     * @param handle\n     * @returns {Promise<Mail[]>}\n     */\n    getMailsByLabel(handle): Promise<Mail[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/mail-labels?handle=' + handle)\n                .subscribe((labels: any) => {\n\n                    const labelId = labels[0].id;\n\n                    this._httpClient.get('api/mail-mails?labels=' + labelId)\n                        .subscribe((mails: any) => {\n\n                            this.mails = mails.map(mail => {\n                                return new Mail(mail);\n                            });\n\n                            this.mails = FuseUtils.filterArrayByString(this.mails, this.searchText);\n\n                            this.onMailsChanged.next(this.mails);\n\n                            resolve(this.mails);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected mail by id\n     *\n     * @param id\n     */\n    toggleSelectedMail(id): void\n    {\n        // First, check if we already have that mail as selected...\n        if ( this.selectedMails.length > 0 )\n        {\n            for ( const mail of this.selectedMails )\n            {\n                // ...delete the selected mail\n                if ( mail.id === id )\n                {\n                    const index = this.selectedMails.indexOf(mail);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedMails.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedMailsChanged.next(this.selectedMails);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedMails.push(\n            this.mails.find(mail => {\n                return mail.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedMails.length > 0 )\n        {\n            this.deselectMails();\n        }\n        else\n        {\n            this.selectMails();\n        }\n\n    }\n\n    /**\n     * Select mails\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectMails(filterParameter?, filterValue?): void\n    {\n        this.selectedMails = [];\n\n        // If there is no filter, select all mails\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedMails = this.mails;\n        }\n        else\n        {\n            this.selectedMails.push(...\n                this.mails.filter(mail => {\n                    return mail[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Deselect mails\n     */\n    deselectMails(): void\n    {\n        this.selectedMails = [];\n\n        // Trigger the next event\n        this.onSelectedMailsChanged.next(this.selectedMails);\n    }\n\n    /**\n     * Set current mail by id\n     *\n     * @param id\n     */\n    setCurrentMail(id): void\n    {\n        this.currentMail = this.mails.find(mail => {\n            return mail.id === id;\n        });\n\n        this.onCurrentMailChanged.next(this.currentMail);\n    }\n\n    /**\n     * Toggle label on selected mails\n     *\n     * @param labelId\n     */\n    toggleLabelOnSelectedMails(labelId): void\n    {\n        this.selectedMails.map(mail => {\n\n            const index = mail.labels.indexOf(labelId);\n\n            if ( index !== -1 )\n            {\n                mail.labels.splice(index, 1);\n            }\n            else\n            {\n                mail.labels.push(labelId);\n            }\n\n            this.updateMail(mail);\n        });\n    }\n\n    /**\n     * Set folder on selected mails\n     *\n     * @param folderId\n     */\n    setFolderOnSelectedMails(folderId): void\n    {\n        this.selectedMails.map(mail => {\n            mail.folder = folderId;\n\n            this.updateMail(mail);\n        });\n\n        this.deselectMails();\n    }\n\n    /**\n     * Update the mail\n     *\n     * @param mail\n     * @returns {Promise<any>}\n     */\n    updateMail(mail): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/mail-mails/' + mail.id, {...mail})\n                .subscribe(response => {\n\n                    this.getMails().then(mails => {\n\n                        if ( mails && this.currentMail )\n                        {\n                            this.setCurrentMail(this.currentMail.id);\n                        }\n\n                        resolve(mails);\n\n                    }, reject);\n                });\n        });\n    }\n}\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { MailService } from 'app/main/apps/mail/mail.service';\nimport { MailComposeDialogComponent } from 'app/main/apps/mail/dialogs/compose/compose.component';\n\n@Component({\n    selector     : 'mail-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class MailMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    labels: any[];\n    accounts: object;\n    selectedAccount: string;\n    dialogRef: any;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {MailService} _mailService\n     * @param {MatDialog} _matDialog\n     */\n    constructor(\n        private _mailService: MailService,\n        public _matDialog: MatDialog\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            creapond    : 'johndoe@creapond.com',\n            withinpixels: 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._mailService.onFoldersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.folders = folders;\n            });\n\n        this._mailService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._mailService.onLabelsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.labels = labels;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Compose dialog\n     */\n    composeDialog(): void\n    {\n        this.dialogRef = this._matDialog.open(MailComposeDialogComponent, {\n            panelClass: 'mail-compose-dialog'\n        });\n        this.dialogRef.afterClosed()\n            .subscribe(response => {\n                if ( !response )\n                {\n                    return;\n                }\n                const actionType: string = response[0];\n                const formData: FormGroup = response[1];\n                switch ( actionType )\n                {\n                    /**\n                     * Send\n                     */\n                    case 'send':\n                        console.log('new Mail', formData.getRawValue());\n                        break;\n                    /**\n                     * Delete\n                     */\n                    case 'delete':\n                        console.log('delete Mail');\n                        break;\n                }\n            });\n    }\n}\n","<!-- SIDEBAR HEADER -->\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\n     class=\"header accent p-24 pb-4\">\n\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">mail\n        </mat-icon>\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">Mailbox</span>\n    </div>\n\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\n        <div class=\"title\">John Doe</div>\n        <mat-form-field floatLabel=\"never\">\n            <mat-select class=\"account-selection\" placeholder=\"Mail Selection\"\n                        [ngModel]=\"selectedAccount\">\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<!-- / SIDEBAR HEADER -->\n\n<!-- SIDEBAR CONTENT -->\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\n\n    <div class=\"px-24 pt-32 pb-12\">\n        <button mat-raised-button\n                class=\"mat-accent compose-dialog-button w-100-p\"\n                (click)=\"composeDialog()\"\n                aria-label=\"Compose\">\n            {{ 'MAIL.COMPOSE' | translate }}\n        </button>\n    </div>\n\n    <div class=\"nav material2\">\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FOLDERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let folder of folders\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/' + folder.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"folder.icon\">{{folder.icon}}</mat-icon>\n                <span>{{folder.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.FILTERS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/filter/' + filter.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngClass]=\"filter.color\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">{{ 'MAIL.LABELS' | translate }}</div>\n\n        <div class=\"nav-item\" *ngFor=\"let label of labels\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/mail/label/' + label.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':label.color}\">label</mat-icon>\n                <span>{{label.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n"]}