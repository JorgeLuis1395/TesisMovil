{"version":3,"sources":["webpack:///src/app/main/apps/perfil/cambiar-contrasena/cambiar-contrasena.component.html","webpack:///src/app/main/apps/perfil/cambiar-contrasena/cambiar-contrasena.component.ts","webpack:///src/app/main/apps/perfil/perfil.component.html","webpack:///src/app/main/apps/perfil/perfil.component.ts","webpack:///src/app/main/apps/perfil/perfil.module.ts","webpack:///src/app/main/servicios/usuario.service.ts"],"names":["CambiarContrasenaComponent","_httpClient","_fuseConfigService","_formBuilder","router","resetPasswordForm","group","old_password","required","password","passwordConfirm","localStorage","getItem","put","url","value","headers","subscribe","res","fire","icon","text","updateUserData","selector","templateUrl","styleUrls","animations","encapsulation","None","PerfilComponent","_usuarioService","rol","fecha_nacimiento","identificacion_usuario","usuarioRol","rutaImagen","_unsubscribeAll","usuarioFuncion","horizontalStepperStep0","imagenUsuario","horizontalStepperStep1","nombres","apellidos","identificacion","direccion","horizontalStepperStep2","horizontalStepperStep3","telefono","email","horizontalStepperStep6","nick","unidad_educativa","console","log","aux","get","imgURL","nombreFoto","cedula","nombre","apellido","Date","imagenSelecionada","toString","event","target","files","length","file","onSubmitFoto","uploadFile","path","imagePath","error","status","mimeType","type","match","message","reader","FileReader","readAsDataURL","onload","_event","result","onFileChangeFoto","preview","routes","component","PerfilModule","forChild","declarations","imports","providers","UsuarioService","http","apiUrl","Promise","resolve","data","idProfesor","Object","values","err","idCuento","nickUsuario","estudianteId","calificacionId","param","reject","post","idEstudiante","idpuntajeFonologico","idPuntaje","puntajeId","calificacion","puntaje","detalle","fecha","fecha_fin","hora_inicio","hora_fin","ubicacion","etiqueta","descripcion","usuarioId","agendaId","urlServicios","formData","FormData","append","providedIn"],"mappings":"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","file":"perfil-perfil-module-es5.js","sourcesContent":["<div id=\"reset-password\" fxLayout=\"column\">\n\n    <div id=\"reset-password-form-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n        <div id=\"reset-password-form\" [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\">\n\n            <div class=\"title\">RESTABLECER CONTRASEÑA</div>\n\n            <form name=\"resetPasswordForm\" [formGroup]=\"resetPasswordForm\" novalidate>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Contraseña Actual</mat-label>\n                    <input matInput type=\"password\" formControlName=\"old_password\">\n                    <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\n                    <mat-error>\n                        Contraseña es un campo obligatorio\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Contraseña Nueva</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\">\n                    <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\n                    <mat-error>\n                        Contraseña es un campo obligatorio\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Confirmar Contraseña</mat-label>\n                    <input matInput type=\"password\" formControlName=\"passwordConfirm\">\n                    <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\n                    <mat-error *ngIf=\"resetPasswordForm.get('passwordConfirm').hasError('required')\">\n                        Confirmación de contraseña es obligatorio\n                    </mat-error>\n                    <mat-error *ngIf=\"!resetPasswordForm.get('passwordConfirm').hasError('required') &&\n                                       resetPasswordForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\n                        Las contraseñas no son iguales\n                    </mat-error>\n                </mat-form-field>\n\n                <button mat-raised-button class=\"submit-button\" color=\"accent\"\n                        aria-label=\"RESET MY PASSWORD\" [disabled]=\"resetPasswordForm.invalid\" (click)=\"updateUserData()\">\n                    CAMBIAR MI CONTRASEÑA\n                </button>\n            </form>\n\n\n        </div>\n\n    </div>\n\n</div>\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {environment} from \"../../../../../environments/environment\";\nimport Swal from \"sweetalert2\";\nimport {fuseAnimations} from \"../../../../../@fuse/animations\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {FuseConfigService} from \"../../../../../@fuse/services/config.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-cambiar-contrasena',\n    templateUrl: './cambiar-contrasena.component.html',\n    styleUrls: ['./cambiar-contrasena.component.scss'],\n    animations: fuseAnimations,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CambiarContrasenaComponent implements OnInit {\n    resetPasswordForm: FormGroup;\n\n\n    constructor(private _httpClient: HttpClient, private _fuseConfigService: FuseConfigService,\n                private _formBuilder: FormBuilder,\n                private readonly router: Router,) {\n\n    }\n\n    ngOnInit(): void {\n        this.resetPasswordForm = this._formBuilder.group({\n            old_password: ['', [Validators.required]],\n            password: ['', Validators.required],\n            passwordConfirm: ['', [Validators.required]]\n        });\n\n    }\n\n    async updateUserData() {\n        if (localStorage.getItem('rol') === 'PROFESOR') {\n            const res = await this._httpClient.put(environment.url + '/usuario/' + localStorage.getItem('idProfesorRegistrado'), {\n                password: this.resetPasswordForm.value.password,\n            }, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(res => {\n                Swal.fire({\n                    icon: 'success',\n                    text: 'Los datos fueron modificados con éxito',\n                });\n            });\n        }\n\n        if (localStorage.getItem('rol') === 'ESTUDIANTE') {\n            const res = await this._httpClient.put(environment.url + '/estudiante/' + localStorage.getItem('idEstudianteRegistrado'), {\n\n                password: this.resetPasswordForm.value.password,\n\n            }, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(res => {\n                Swal.fire({\n                    icon: 'success',\n                    text: 'Los datos fueron modificados con éxito',\n                });\n            });\n        }\n    }\n\n}\n","<div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" style=\"display: block\">\n\n\n    <!-- CONTENT -->\n    <div class=\"content p-44\" fxLayoutAlign=\"center\" style=\"display: block\">\n\n        <div class=\"horizontal-stepper-wrapper\" style=\"display: block\">\n\n            <!-- HORIZONTAL STEPPER EXAMPLE -->\n            <mat-horizontal-stepper class=\"mat-elevation-z4\" [linear]=\"true\" style=\"display: block\">\n\n                <mat-step [stepControl]=\"horizontalStepperStep0\">\n\n                    <form fxLayout=\"column\" [formGroup]=\"horizontalStepperStep0\">\n\n                        <ng-template matStepLabel>Imagen</ng-template>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n                            <div fxFlex=\"1 0 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n                                <form (ngSubmit)=\"onSubmitFoto()\">\n                                    <div class=\"form-group\" enctype=\"multipart/form-data\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-5\">\n                                                <div>\n                                                    <img [src]=\"imgURL\"\n                                                         onerror=\"this.src='assets/images/logoUsuario.png';\"\n                                                         style=\"height: 150px; width: 150px;margin-left: 20px\">\n                                                </div>\n\n                                                <input style=\"display: none\" #file type=\"file\" accept='image/*'\n                                                       (change)=\"onFileChangeFoto($event)\" #fileInput\n                                                       accept=\".jpeg,.jpg,.png\"\n                                                       (change)=\"preview(file.files)\"/>\n                                                <br>\n                                                <button mat-button color=\"accent\"\n                                                        style=\"background-color: #0fba6d; color: white; margin-left: 20px\"\n                                                        (click)=\"file.click()\"><i class=\"fa fa-camera\"  aria-hidden=\"true\"></i>  Subir Imagen\n                                                </button>\n                                                <br>\n                                                <br>\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n                                </form>\n\n\n                            </div>\n                        </div>\n\n\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                            <button mat-raised-button matStepperNext type=\"button\" color=\"accent\">\n                                Siguiente\n                            </button>\n                        </div>\n\n                    </form>\n\n                </mat-step>\n\n                <mat-step [stepControl]=\"horizontalStepperStep1\">\n\n                    <form fxLayout=\"column\" [formGroup]=\"horizontalStepperStep1\">\n\n                        <ng-template matStepLabel>Datos</ng-template>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n                            <div fxFlex=\"1 0 auto\" fxLayout=\"column\">\n                                <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                    <mat-label>Identificación</mat-label>\n                                    <input matInput formControlName=\"identificacion\" required>\n                                    <i matSuffix class=\"secondary-text\" class=\"fa fa-address-card\"\n                                       aria-hidden=\"true\"></i>\n                                    <mat-error>Identificación es obligatorio!</mat-error>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" fxFlex=\"50\">\n                                    <mat-label>Nombres</mat-label>\n                                    <input matInput formControlName=\"nombres\" required>\n                                    <i matSuffix class=\"secondary-text\" class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                    <mat-error>Nombre es obligatorio!</mat-error>\n                                </mat-form-field>\n\n                                <mat-form-field appearance=\"outline\" fxFlex=\"50\">\n                                    <mat-label>Apellidos</mat-label>\n                                    <input matInput formControlName=\"apellidos\" required>\n                                    <i matSuffix class=\"secondary-text\" class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                                    <mat-error>Apellido es obligatorio!</mat-error>\n                                </mat-form-field>\n\n\n                                <mat-form-field appearance=\"outline\" fxFlex=\"50\">\n                                    <mat-label>Fecha Nacimiento</mat-label>\n                                    <input type=\"date\" matInput id=\"fecha_nacimiento\" [value]=\"fecha_nacimiento\"\n                                           formControlName=\"fecha_nacimiento\" required>\n                                    <mat-error>Fecha de Nacimiento es obligatorio!</mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                            <button mat-raised-button matStepperNext type=\"button\" color=\"accent\">\n                                Siguiente\n                            </button>\n                        </div>\n\n                    </form>\n\n                </mat-step>\n\n\n                <mat-step [stepControl]=\"horizontalStepperStep3\">\n\n                    <form fxLayout=\"column\" [formGroup]=\"horizontalStepperStep3\">\n\n                        <ng-template matStepLabel>Contacto</ng-template>\n\n                        <div fxFlex=\"1 0 auto\" fxLayout=\"column\">\n\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                <mat-label>Telefono</mat-label>\n                                <input type=\"number\" matInput formControlName=\"telefono\">\n                                <i matSuffix class=\"secondary-text\" class=\"fa fa-phone\" aria-hidden=\"true\"></i>\n\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                <mat-label>Correo</mat-label>\n                                <input type=\"email\" matInput formControlName=\"email\" readonly>\n                                <i matSuffix class=\"secondary-text\" class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\n\n                            </mat-form-field>\n\n\n\n                        </div>\n\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                            <button class=\"mr-8\" mat-raised-button matStepperPrevious type=\"button\" color=\"accent\">\n                                Anterior\n                            </button>\n                            <button mat-raised-button matStepperNext type=\"button\" color=\"accent\">\n                                Siguiente\n                            </button>\n                        </div>\n\n                    </form>\n\n                </mat-step>\n\n                <mat-step [stepControl]=\"horizontalStepperStep6\" *ngIf=\"rol !='ADMINISTRADOR'\">\n\n                    <form fxLayout=\"column\" [formGroup]=\"horizontalStepperStep6\">\n\n                        <ng-template matStepLabel>Redes Sociales</ng-template>\n\n                        <div fxFlex=\"1 0 auto\" fxLayout=\"column\">\n\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                <mat-label>Nick</mat-label>\n                                <input matInput formControlName=\"nick\">\n                                <i matSuffix class=\"secondary-text\" class=\"fas fa-user\" aria-hidden=\"true\"></i>\n\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                <mat-label>Password</mat-label>\n                                <input matInput formControlName=\"password\">\n                                <i matSuffix class=\"secondary-text\" class=\"fas fa-key\" aria-hidden=\"true\"></i>\n\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\" fxFlex=\"100\">\n                                <mat-label>Unidad Educativa</mat-label>\n                                <input matInput formControlName=\"unidad_educativa\">\n                                <i matSuffix class=\"secondary-text\" class=\"fas fa-home\" aria-hidden=\"true\"></i>\n\n                            </mat-form-field>\n\n                        </div>\n\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                            <button class=\"mr-8\" mat-raised-button matStepperPrevious type=\"button\" color=\"accent\">\n                                Anterior\n                            </button>\n                            <button mat-raised-button type=\"button\" color=\"accent\"\n                                    (click)=\"finishHorizontalStepper()\">\n                                Guardar\n                            </button>\n                        </div>\n\n                    </form>\n\n                </mat-step>\n\n\n            </mat-horizontal-stepper>\n            <!-- / HORIZONTAL STEPPER EXAMPLE -->\n\n        </div>\n\n    </div>\n\n</div>\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport Swal from \"sweetalert2\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject} from \"rxjs\";\nimport {UsuarioService} from \"../../servicios/usuario.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../../../../environments/environment\";\nimport {fuseAnimations} from \"../../../../@fuse/animations\";\n\n\n@Component({\n    selector: 'app-perfil',\n    templateUrl: './perfil.component.html',\n    styleUrls: ['./perfil.component.scss'],\n    animations: fuseAnimations,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PerfilComponent implements OnInit {\n    about: any;\n    usuarioForm: FormGroup;\n    rol = '';\n    fecha_nacimiento = ' ';\n    identificacion_usuario = '';\n\n    nombreArchivo: string;\n\n    // Horizontal Stepper\n    horizontalStepperStep0: FormGroup;\n    horizontalStepperStep1: FormGroup;\n    horizontalStepperStep2: FormGroup;\n    horizontalStepperStep3: FormGroup;\n    horizontalStepperStep4: FormGroup;\n    horizontalStepperStep5: FormGroup;\n    horizontalStepperStep6: FormGroup;\n\n    public imagePath;\n    path: string;\n    imgURL: any;\n    imagenUsuario: File;\n    public message: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n    private imagenSelecionada: string;\n    imagenSelecionada1: string;\n    usuarioRol = localStorage.getItem('rol');\n\n    // @ts-ignore\n    /**\n     * Constructor\n     *\n     * @param {FormBuilder} _formBuilder\n     * @param _authService\n     * @param _usuarioService\n     * @param _tituloService\n     * @param _detalleService\n     * @param _httpClient\n     */\n    constructor(\n        private _formBuilder: FormBuilder,\n        private readonly _usuarioService: UsuarioService,\n        private readonly _httpClient: HttpClient,\n    ) {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n    rutaImagen = environment.url + '/public/users';\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        this.usuarioFuncion();\n\n        this.horizontalStepperStep0 = this._formBuilder.group({\n            imagenUsuario: [''],\n        });\n        // Horizontal Stepper form steps\n        this.horizontalStepperStep1 = this._formBuilder.group({\n\n            nombres: ['', Validators.required],\n            apellidos: ['', Validators.required],\n            identificacion: ['', Validators.required],\n            fecha_nacimiento: ['', Validators.required],\n            direccion: ['', Validators.required],\n        });\n\n        this.horizontalStepperStep2 = this._formBuilder.group({});\n\n        this.horizontalStepperStep3 = this._formBuilder.group({\n            telefono: [''],\n            email: ['', Validators.required],\n        });\n\n\n        this.horizontalStepperStep6 = this._formBuilder.group({\n            nick: [''],\n            password: [''],\n            unidad_educativa :[''],\n        });\n    }\n\n    finishHorizontalStepper(): void {\n        console.log(this.horizontalStepperStep1.value.nombres);\n        this.updateUserData();\n    }\n\n    usuarioFuncion(): void {\n        let aux: any;\n        if (localStorage.getItem('rol') === 'PROFESOR') {\n            this._httpClient.get(environment.url + '/usuario/' + localStorage.getItem('nick'), {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(res => {\n                console.log(res);\n                aux = res;\n                this.imgURL = this.rutaImagen + aux.nombreFoto;\n                this.identificacion_usuario = aux.cedula;\n                this.horizontalStepperStep0 = this._formBuilder.group({\n                    imagenUsuario: [aux.nombreFoto],\n                });\n                this.horizontalStepperStep1 = this._formBuilder.group({\n                    nombres: [aux.nombre],\n                    apellidos: [aux.apellido],\n                    identificacion: [aux.cedula],\n                    fecha_nacimiento: [aux.fecha_nacimiento],\n                    direccion: [aux.direccion],\n                });\n\n                this.horizontalStepperStep2 = this._formBuilder.group({});\n\n                this.horizontalStepperStep3 = this._formBuilder.group({\n                    telefono: [aux.telefono],\n                    email: [aux.email],\n                });\n                this.horizontalStepperStep6 = this._formBuilder.group({\n                    nick: [aux.nick],\n                    password: [aux.password],\n                    unidad_educativa:[aux.unidad_educativa],\n\n                });\n\n\n            });\n        }\n\n\n        if (localStorage.getItem('rol') === 'ESTUDIANTE') {\n            this._httpClient.get(environment.url + '/estudiante/' + localStorage.getItem('nick'), {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(res => {\n                console.log(res);\n                aux = res;\n                this.imgURL = this.rutaImagen + aux.nombreFoto;\n                this.identificacion_usuario = aux.cedula;\n                this.horizontalStepperStep0 = this._formBuilder.group({\n                    imagenUsuario: [aux.nombreFoto],\n                });\n                this.horizontalStepperStep1 = this._formBuilder.group({\n                    nombres: [aux.nombre],\n                    apellidos: [aux.apellido],\n                    identificacion: [aux.cedula],\n                    fecha_nacimiento: [aux.fecha_nacimiento],\n                    direccion: [aux.direccion],\n                });\n\n                this.horizontalStepperStep2 = this._formBuilder.group({});\n\n                this.horizontalStepperStep3 = this._formBuilder.group({\n                    telefono: [aux.telefono],\n                    email: [aux.email],\n                });\n                this.horizontalStepperStep6 = this._formBuilder.group({\n                    nick: [aux.nick],\n                    password: [aux.password],\n                    unidad_educativa:[aux.unidad_educativa],\n\n                });\n\n\n            });\n        }\n\n\n    }\n\n\n    async updateUserData() {\n        if (localStorage.getItem('rol') === 'PROFESOR') {\n            const res = await this._httpClient.put(environment.url + '/usuario/' + localStorage.getItem('idProfesorRegistrado'), {\n                nombre: this.horizontalStepperStep1.value.nombres,\n                apellido: this.horizontalStepperStep1.value.apellidos,\n                cedula: this.horizontalStepperStep1.value.identificacion,\n                fecha_nacimiento: new Date(this.horizontalStepperStep1.value.fecha_nacimiento),\n                //direccion: this.horizontalStepperStep1.value.direccion,\n                unidad_educativa: this.horizontalStepperStep6.value.unidad_educativa,\n                email: this.horizontalStepperStep3.value.email,\n                // telefono: this.horizontalStepperStep3.value.telefono,\n                //nivel_estu_usuario: this.horizontalStepperStep4.value.formacion,\n                nombreFoto: this.imagenSelecionada,\n                nick: this.horizontalStepperStep6.value.nick,\n                password: this.horizontalStepperStep6.value.password,\n                //sexo_usuario: userUpdate.sex,\n                telefono: this.horizontalStepperStep3.value.telefono.toString()\n            }, {}).subscribe(res => {\n                Swal.fire({\n                    icon: 'success',\n                    text: 'Los datos fueron modificados con éxito',\n                });\n            });\n        }\n\n        if (localStorage.getItem('rol') === 'ESTUDIANTE') {\n            const res = await this._httpClient.put(environment.url + '/estudiante/' + localStorage.getItem('idEstudianteRegistrado'), {\n                nombre: this.horizontalStepperStep1.value.nombres,\n                apellido: this.horizontalStepperStep1.value.apellidos,\n                cedula: this.horizontalStepperStep1.value.identificacion,\n                fecha_nacimiento: new Date(this.horizontalStepperStep1.value.fecha_nacimiento),\n                //direccion: this.horizontalStepperStep1.value.direccion,\n                unidad_educativa: this.horizontalStepperStep6.value.unidad_educativa,\n                email: this.horizontalStepperStep3.value.email,\n                // telefono: this.horizontalStepperStep3.value.telefono,\n                //nivel_estu_usuario: this.horizontalStepperStep4.value.formacion,\n                nombreFoto: this.imagenSelecionada,\n                nick: this.horizontalStepperStep6.value.nick,\n                password: this.horizontalStepperStep6.value.password,\n                //sexo_usuario: userUpdate.sex,\n                telefono: this.horizontalStepperStep3.value.telefono.toString()\n            }, {}).subscribe(res => {\n                Swal.fire({\n                    icon: 'success',\n                    text: 'Los datos fueron modificados con éxito',\n                });\n            });\n        }\n    }\n\n\n    onFileChangeFoto(event): void {\n        if (event.target.files.length > 0) {\n            const file = event.target.files[0];\n            this.imagenUsuario = file;\n            this.onSubmitFoto();\n        }\n    }\n\n    onSubmitFoto(): void {\n        this._usuarioService.uploadFile(this.imagenUsuario).subscribe(value => {\n            this.path = value.imagePath;\n            this.imagenSelecionada = this.path;\n            Swal.fire({\n                icon: 'success',\n                text: 'Tu imagen se guardó con éxito!',\n            });\n        }, error => {\n            if (error.status && error.status === 403) {\n\n            } else {\n                // alert('No se puede cargar la imagen prueba cambiando el formato a .png');\n            }\n            console.log(error, 'error');\n        });\n    }\n\n    preview(files): void {\n        if (files.length === 0) {\n            return;\n        }\n\n        const mimeType = files[0].type;\n        if (mimeType.match(/image\\/*/) == null) {\n            this.message = 'Only images are supported.';\n            return;\n        }\n\n        const reader = new FileReader();\n        this.imagePath = files;\n        reader.readAsDataURL(files[0]);\n        reader.onload = (_event) => {\n            this.imgURL = reader.result;\n        };\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\n\nimport {PerfilComponent} from './perfil.component';\nimport { CambiarContrasenaComponent } from './cambiar-contrasena/cambiar-contrasena.component';\n\nconst routes: Routes = [\n    {\n        path     : '',\n        component: PerfilComponent\n    },\n    {\n        path     : 'change-password',\n        component: CambiarContrasenaComponent\n    },\n\n];\n\n@NgModule({\n    declarations: [\n        PerfilComponent,\n        CambiarContrasenaComponent,\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatStepperModule,\n\n        FuseSharedModule,\n    ],\n    providers:[]\n})\nexport class PerfilModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {environment} from \"../../../environments/environment\";\nimport {UserInterface} from \"../../interface/user.interface\";\nimport {CuentaInterface} from \"../../interface/cuenta.interface\";\nimport {Router} from \"@angular/router\";\nimport {LoginService} from \"./login.service\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n    constructor(public http: HttpClient) {\n    }\n\n    apiUrl = environment.url;\n    private idpuntajeFonologico: number;\n\n    getUsuario(nick) {\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/usuario/' + nick,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n                environment.idProfesor = Object.values(data)[0];\n\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n\n    getCuentosId(idCuento) {\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/cuentos/'+ idCuento,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n    getCuentos() {\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/cuentos',\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n\n\n    getEstudiante(nickUsuario) {\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/estudiante/' + nickUsuario,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n\n\n    saveCalificacionEstudiante(\n        estudianteId, calificacionId,) {\n        const param = {\n            estudianteId,\n            calificacionId\n\n        };\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/estudianteCalificacion', param, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getEstudianteId(idEstudiante) {\n\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/estudiante/id/' + idEstudiante,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n    getPuntajeFonoloficaId() {\n\n        this.idpuntajeFonologico = environment.idPuntaje - 1;\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/puntaje/' + this.idpuntajeFonologico,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n                console.log(data);\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n    getPuntajeVisualId() {\n\n        return new Promise(resolve => {\n            this.http.get(this.apiUrl + '/puntaje/' + environment.idPuntaje,\n                {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})}).subscribe(data => {\n                resolve(data);\n\n            }, err => {\n                console.log(err);\n            });\n        });\n    }\n\n    savePuntajeEstudiante(\n        estudianteId, puntajeId,) {\n        const param = {\n            estudianteId,\n            puntajeId\n\n        };\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/estudiantePuntaje', param, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    postCalificaciones(calificacion) {\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/calificaciones',  calificacion, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    postPuntaje(puntaje, detalle) {\n        const param = {\n            puntaje,\n            detalle,\n        };\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/puntaje', param, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    postAgenda(fecha, fecha_fin, nombre, hora_inicio, hora_fin, ubicacion, etiqueta, descripcion) {\n        const param = {\n            fecha,\n            fecha_fin,\n            nombre, hora_inicio, hora_fin, ubicacion, etiqueta, descripcion\n        };\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/agenda', param, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    saveAgendaProfesor(\n        usuarioId, agendaId,) {\n        const param = {\n            usuarioId,\n            agendaId\n\n        };\n\n        return new Promise((resolve, reject) => {\n            this.http.post(this.apiUrl + '/agendaProfesor', param, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    uploadFile(file: any): Observable<any> {\n\n        const urlServicios = this.apiUrl + '/usuario/upload-image';\n        let formData: FormData = new FormData();\n        formData.append('image', file);\n        return this.http.post<any>(urlServicios, formData, {headers: new HttpHeaders({'Authorization': 'Bearer ' + localStorage.getItem('tokenUsuario')})})\n    }\n\n\n}\n"]}