{"version":3,"sources":["webpack:///src/app/main/apps/memoria/memoria.component.ts","webpack:///src/app/main/apps/memoria/memoria.component.html","webpack:///src/app/main/apps/memoria/memoria.module.ts"],"names":["MemoriaComponent","_fuseSidebarService","_matDialog","images","id","url","images_inact","cards","last_select_id","aciertos","count_aciertos","intentos","cont_intentos","count_index","i","img","push","visible","active","RandomArray","idx","_this","setTimeout","ganaste","perdiste","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","fire","title","width","padding","background","backdrop","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","window","location","reload","name","getSidebar","toggleOpen","toggleSidebar","selector","templateUrl","styleUrls","routes","path","component","MemoriaModule","forChild","declarations","imports"],"mappings":"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","file":"memoria-memoria-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FuseSidebarService} from \"../../../../@fuse/components/sidebar/sidebar.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n    selector: 'app-memoria',\n    templateUrl: './memoria.component.html',\n    styleUrls: ['./memoria.component.scss']\n})\nexport class MemoriaComponent implements OnInit {\n    private images = [\n        {id: 1, url: \"/assets/imagenes/1.jpeg\"},\n        {id: 2, url: \"/assets/imagenes/6.jpg\"},\n        {id: 3, url: \"/assets/imagenes/7.jpg\"},\n        {id: 4, url: \"/assets/imagenes/9.jpg\"}\n    ];\n    public images_inact = \"/assets/imagenes/poker.png\";\n    public cards = [];\n    private last_select_id = null;\n    private aciertos = 4;\n    private count_aciertos = 0;\n    public intentos = 12;\n    public cont_intentos = 0;\n\n    constructor(private _fuseSidebarService: FuseSidebarService,\n                private _matDialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        let count_index = 0;\n        for (let i = 0; i < this.aciertos * 2; i++) {\n            if (count_index == this.aciertos) {\n                count_index = 0;\n            }\n            let img = this.images[count_index];\n            this.cards.push({\n                id: img.id,\n                url: img.url,\n                visible: false, //si la imagen se muestra\n                active: true //seleccionable\n            });\n            count_index++;\n        }\n        this.RandomArray(this.cards);\n    }\n\n\n    card_selected(idx) {\n        if (!this.cards[idx].active) {\n            return;\n        }\n        this.cards[idx].visible = true;\n\n        if (this.last_select_id == null) {\n            this.last_select_id = idx;\n            this.cards[idx].visible = true;\n            this.cards[idx].active = false;\n        } else {\n            if (this.cards[this.last_select_id].id == this.cards[idx].id) { //aumentar aciertos si coinciden\n                this.count_aciertos++;\n                this.cards[idx].visible = true;\n                this.cards[idx].active = false;\n                this.last_select_id = null;\n            } else { //no hacen match\n\n                let _this = this;\n                setTimeout(function () {\n                    _this.cards[_this.last_select_id].visible = false; //ocultar\n                    _this.cards[_this.last_select_id].active = true; //activar\n                    _this.cards[idx].visible = false;\n                    _this.last_select_id = null;\n                }, 0.2 * 1000)\n\n            }\n        }\n        if (this.aciertos == this.count_aciertos) {\n            //this.flashMensaje.show('Ganaste.', {cssClass: 'alert-success', timeout: 10000});\n            //window.location.reload();\n            this.ganaste()\n        }\n        if (this.cont_intentos == this.intentos - 1) {\n            // this.flashMensaje.show('=( PERDISTE.', {cssClass: 'alert-success', timeout: 10000});\n            //window.location.reload();\n            this.perdiste()\n        }\n        this.cont_intentos++;\n\n    }\n\n    RandomArray(array) {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    perdiste() {\n        Swal.fire({\n            title: 'Se te acabaron los intentos. Por favor intentalo de nuevo',\n            width: 600,\n            padding: '3em',\n            background: '#fff url(/images/trees.png)',\n            backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"https://gifsanimados.de/img-gifsanimados.de/c/caritas/carita-lagrima.gif\")\n    center top\n    no-repeat\n  `,\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Quieres intentarlo de nuevo'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n            }\n        })\n    }\n\n    ganaste() {\n        Swal.fire({\n            title: 'Felicitaciones !!!! Ganaste que excelente memoria',\n            width: 600,\n            padding: '3em',\n            background: '#fff url(/images/trees.png)',\n            backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"https://gifsanimados.de/img-gifsanimados.de/c/caritas/carita-guino.gif\")\n    center top\n    no-repeat\n  `,\n            showCancelButton: true,\n            confirmButtonColor: '#49d630',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Quieres jugar otra vez'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n            }\n        })\n    }\n\n    toggleSidebar(name): void {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n\n\n}\n","<div id=\"contacts\" class=\"page-layout simple left-sidebar inner-sidebar inner-scroll\">\n\n    <!-- HEADER -->\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\n         fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n\n        <!-- APP TITLE -->\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button class=\"sidebar-toggle mr-12\" fxHide.gt-sm\n                    (click)=\"toggleSidebar('contacts-main-sidebar')\">\n                <mat-icon>menu</mat-icon>\n            </button>\n\n            <div class=\"logo\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon mr-16\"\n                          [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box\n                </mat-icon>\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    MEMORIA I\n                </span>\n            </div>\n\n        </div>\n\n    </div>\n    <!-- / HEADER -->\n\n\n    <!-- CONTENT -->\n    <div class=\"content\">\n\n        <div class=\"container\">\n            <div fxFlex=\"100\" style=\"align-content: center\" fxLayoutAlign=\"center\" class=\"card opacity\" align=\"center\">\n                <div class=\"intentos\"><b>Intentos restantes:</b> {{intentos - cont_intentos}}\n                </div>\n                <div class=\"mesa-cartas\">\n      <span *ngFor=\"let card of cards; index as i\"><img class=\"img-card\"\n                                                        src=\"{{card.visible ? card.url : images_inact}}\"\n                                                        (click)=\"card_selected(i)\" height=\"190px\" width=\"250px\"></span>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-1\"></div>\n                <div class=\"col-sm-12\" align=\"center\">\n                    <a routerLink=\"/apps/memoria2\">\n                        <button class=\"btn btn-info btn-dark\">Siguiente</button>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\nimport {MemoriaComponent} from \"./memoria.component\";\nconst routes: Routes = [\n    {\n        path     : '**',\n        component: MemoriaComponent,\n    }\n];\n\n@NgModule({\n    declarations   : [\n        MemoriaComponent,\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatTableModule,\n        MatToolbarModule,\n\n        FuseSharedModule,\n        FuseConfirmDialogModule,\n        FuseSidebarModule\n    ],})\nexport class MemoriaModule\n{\n}\n"]}