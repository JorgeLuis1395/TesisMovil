{"version":3,"sources":["./src/app/main/apps/memoria/memoria.component.ts","./src/app/main/apps/memoria/memoria.component.html","./src/app/main/apps/memoria/memoria.module.ts"],"names":[],"mappings":"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","file":"memoria-memoria-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FuseSidebarService} from \"../../../../@fuse/components/sidebar/sidebar.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n    selector: 'app-memoria',\n    templateUrl: './memoria.component.html',\n    styleUrls: ['./memoria.component.scss']\n})\nexport class MemoriaComponent implements OnInit {\n    private images = [\n        {id: 1, url: \"/assets/imagenes/1.jpeg\"},\n        {id: 2, url: \"/assets/imagenes/6.jpg\"},\n        {id: 3, url: \"/assets/imagenes/7.jpg\"},\n        {id: 4, url: \"/assets/imagenes/9.jpg\"}\n    ];\n    public images_inact = \"/assets/imagenes/poker.png\";\n    public cards = [];\n    private last_select_id = null;\n    private aciertos = 4;\n    private count_aciertos = 0;\n    public intentos = 12;\n    public cont_intentos = 0;\n\n    constructor(private _fuseSidebarService: FuseSidebarService,\n                private _matDialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        let count_index = 0;\n        for (let i = 0; i < this.aciertos * 2; i++) {\n            if (count_index == this.aciertos) {\n                count_index = 0;\n            }\n            let img = this.images[count_index];\n            this.cards.push({\n                id: img.id,\n                url: img.url,\n                visible: false, //si la imagen se muestra\n                active: true //seleccionable\n            });\n            count_index++;\n        }\n        this.RandomArray(this.cards);\n    }\n\n\n    card_selected(idx) {\n        if (!this.cards[idx].active) {\n            return;\n        }\n        this.cards[idx].visible = true;\n\n        if (this.last_select_id == null) {\n            this.last_select_id = idx;\n            this.cards[idx].visible = true;\n            this.cards[idx].active = false;\n        } else {\n            if (this.cards[this.last_select_id].id == this.cards[idx].id) { //aumentar aciertos si coinciden\n                this.count_aciertos++;\n                this.cards[idx].visible = true;\n                this.cards[idx].active = false;\n                this.last_select_id = null;\n            } else { //no hacen match\n\n                let _this = this;\n                setTimeout(function () {\n                    _this.cards[_this.last_select_id].visible = false; //ocultar\n                    _this.cards[_this.last_select_id].active = true; //activar\n                    _this.cards[idx].visible = false;\n                    _this.last_select_id = null;\n                }, 0.2 * 1000)\n\n            }\n        }\n        if (this.aciertos == this.count_aciertos) {\n            //this.flashMensaje.show('Ganaste.', {cssClass: 'alert-success', timeout: 10000});\n            //window.location.reload();\n            this.ganaste()\n        }\n        if (this.cont_intentos == this.intentos - 1) {\n            // this.flashMensaje.show('=( PERDISTE.', {cssClass: 'alert-success', timeout: 10000});\n            //window.location.reload();\n            this.perdiste()\n        }\n        this.cont_intentos++;\n\n    }\n\n    RandomArray(array) {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    perdiste() {\n        Swal.fire({\n            title: 'Se te acabaron los intentos. Por favor intentalo de nuevo',\n            width: 600,\n            padding: '3em',\n            background: '#fff url(/images/trees.png)',\n            backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"https://gifsanimados.de/img-gifsanimados.de/c/caritas/carita-lagrima.gif\")\n    center top\n    no-repeat\n  `,\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Quieres intentarlo de nuevo'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n            }\n        })\n    }\n\n    ganaste() {\n        Swal.fire({\n            title: 'Felicitaciones !!!! Ganaste que excelente memoria',\n            width: 600,\n            padding: '3em',\n            background: '#fff url(/images/trees.png)',\n            backdrop: `\n    rgba(0,0,123,0.4)\n    url(\"https://gifsanimados.de/img-gifsanimados.de/c/caritas/carita-guino.gif\")\n    center top\n    no-repeat\n  `,\n            showCancelButton: true,\n            confirmButtonColor: '#49d630',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Quieres jugar otra vez'\n        }).then((result) => {\n            if (result.value) {\n                window.location.reload();\n            }\n        })\n    }\n\n    toggleSidebar(name): void {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n\n\n}\n","<div id=\"contacts\" class=\"page-layout simple left-sidebar inner-sidebar inner-scroll\">\n\n    <!-- HEADER -->\n    <div class=\"header accent p-16 p-sm-24\" fxLayout=\"column\" fxLayoutAlign=\"start\"\n         fxLayout.gt-xs=\"row\" fxLayoutAlign.gt-xs=\"space-between center\">\n\n        <!-- APP TITLE -->\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button class=\"sidebar-toggle mr-12\" fxHide.gt-sm\n                    (click)=\"toggleSidebar('contacts-main-sidebar')\">\n                <mat-icon>menu</mat-icon>\n            </button>\n\n            <div class=\"logo\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                <mat-icon class=\"logo-icon mr-16\"\n                          [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">account_box\n                </mat-icon>\n                <span class=\"logo-text h1\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">\n                    MEMORIA I\n                </span>\n            </div>\n\n        </div>\n\n    </div>\n    <!-- / HEADER -->\n\n\n    <!-- CONTENT -->\n    <div class=\"content\">\n\n        <div class=\"container\">\n            <div fxFlex=\"100\" style=\"align-content: center\" fxLayoutAlign=\"center\" class=\"card opacity\" align=\"center\">\n                <div class=\"intentos\"><b>Intentos restantes:</b> {{intentos - cont_intentos}}\n                </div>\n                <div class=\"mesa-cartas\">\n      <span *ngFor=\"let card of cards; index as i\"><img class=\"img-card\"\n                                                        src=\"{{card.visible ? card.url : images_inact}}\"\n                                                        (click)=\"card_selected(i)\" height=\"190px\" width=\"250px\"></span>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-1\"></div>\n                <div class=\"col-sm-12\" align=\"center\">\n                    <a routerLink=\"/apps/memoria2\">\n                        <button class=\"btn btn-info btn-dark\">Siguiente</button>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseConfirmDialogModule, FuseSidebarModule } from '@fuse/components';\nimport {MemoriaComponent} from \"./memoria.component\";\nconst routes: Routes = [\n    {\n        path     : '**',\n        component: MemoriaComponent,\n    }\n];\n\n@NgModule({\n    declarations   : [\n        MemoriaComponent,\n    ],\n    imports        : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatTableModule,\n        MatToolbarModule,\n\n        FuseSharedModule,\n        FuseConfirmDialogModule,\n        FuseSidebarModule\n    ],})\nexport class MemoriaModule\n{\n}\n"],"sourceRoot":"webpack:///"}