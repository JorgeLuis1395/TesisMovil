{"version":3,"sources":["webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.ts","webpack:///src/app/main/apps/todo/sidebars/main/main-sidebar.component.html","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.ts","webpack:///src/app/main/apps/todo/todo-details/todo-details.component.html","webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component.html","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.ts","webpack:///src/app/main/apps/todo/todo-list/todo-list.component.html","webpack:///src/app/main/apps/todo/todo.component.ts","webpack:///src/app/main/apps/todo/todo.component.html","webpack:///src/app/main/apps/todo/todo.model.ts","webpack:///src/app/main/apps/todo/todo.module.ts","webpack:///src/app/main/apps/todo/todo.service.ts"],"names":["TodoMainSidebarComponent","_todoService","_router","accounts","creapond","withinpixels","selectedAccount","_unsubscribeAll","onFiltersChanged","pipe","subscribe","filters","onTagsChanged","tags","next","complete","navigate","then","setTimeout","onNewTodoClicked","newTodo","selector","templateUrl","styleUrls","encapsulation","None","animations","TodoDetailsComponent","_formBuilder","onCurrentTodoChanged","todo","formType","todoForm","createTodoForm","valueChanges","data","updateTodo","labels","id","generateGUID","focusTitleField","titleInputField","nativeElement","focus","group","title","notes","startDate","dueDate","completed","starred","important","deleted","event","stopPropagation","toggleStar","toggleImportant","toggleCompleted","toggleDeleted","tagId","toggleTagOnTodo","hasTag","getRawValue","TodoListItemComponent","_activatedRoute","snapshot","url","path","moveDisabled","onSelectedTodosChanged","selectedTodos","selected","length","toggleSelectedTodo","onSelectedChange","$event","TodoListComponent","_location","onTodosChanged","todos","currentTodo","tagHandle","params","filterHandle","go","todoId","setCurrentTodo","ev","onDrop","TodoComponent","_fuseSidebarService","searchInput","hasSelectedTodos","isIndeterminate","folders","searchText","onSearchTextChanged","toggleSelectAll","filterParameter","filterValue","selectTodos","deselectTodos","toggleTagOnSelectedTodos","name","getSidebar","toggleOpen","toggleSidebar","Todo","routes","component","resolve","redirectTo","TodoModule","forChild","declarations","imports","providers","TodoService","_httpClient","route","state","routeParams","Promise","reject","all","getFilters","getTags","getTodos","get","response","getTodosByTag","getTodosByFilter","getTodosByParams","handle","map","filterArrayByString","param","index","indexOf","splice","push","find","undefined","filter","post"],"mappings":"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","file":"todo-todo-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-main-sidebar',\n    templateUrl  : './main-sidebar.component.html',\n    styleUrls    : ['./main-sidebar.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoMainSidebarComponent implements OnInit, OnDestroy\n{\n    folders: any[];\n    filters: any[];\n    tags: any[];\n    accounts: object;\n    selectedAccount: string;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {Router} _router\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _router: Router\n    )\n    {\n        // Set the defaults\n        this.accounts = {\n            creapond    : 'johndoe@creapond.com',\n            withinpixels: 'johndoe@withinpixels.com'\n        };\n        this.selectedAccount = 'creapond';\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(filters => {\n                this.filters = filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * New todo\n     */\n    newTodo(): void\n    {\n        this._router.navigate(['/apps/todo/all']).then(() => {\n            setTimeout(() => {\n                this._todoService.onNewTodoClicked.next('');\n            });\n        });\n    }\n}\n","<!-- SIDEBAR HEADER -->\n<div fxLayout=\"column\" fxLayoutAlign=\"space-between start\"\n     class=\"header accent p-24 pb-4\">\n    <div class=\"logo\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"logo-icon s-32\" [@animate]=\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\">\n            check_box\n        </mat-icon>\n        <span class=\"logo-text\" [@animate]=\"{value:'*',params:{delay:'100ms',x:'-25px'}}\">To-Do</span>\n    </div>\n\n    <div class=\"account\" fxLayout=\"column\" [@animate]=\"{value:'*',params:{delay:'300ms'}}\">\n        <div class=\"title\">John Doe</div>\n        <mat-form-field floatLabel=\"never\">\n            <mat-select class=\"account-selection\" placeholder=\"Todo Selection\"\n                        [ngModel]=\"selectedAccount\">\n                <mat-option *ngFor=\"let account of (accounts | keys)\" [value]=\"account.key\">\n                    {{account.value}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n\n</div>\n<!-- / SIDEBAR HEADER -->\n\n<!-- SIDEBAR CONTENT -->\n<div class=\"content\" fusePerfectScrollbar [@animate]=\"{value:'*',params:{y:'50px'}}\">\n\n    <div class=\"p-24\">\n        <button mat-raised-button\n                class=\"mat-accent add-todo-button w-100-p\"\n                (click)=\"newTodo()\"\n                aria-label=\"ADD TASK\">\n            ADD TASK\n        </button>\n    </div>\n\n    <div class=\"nav material2\">\n\n        <div class=\"nav-item\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/all'\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\">view_headline</mat-icon>\n                <span>All</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">FILTERS</div>\n\n        <div class=\"nav-item\" *ngFor=\"let filter of filters\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/filter/' + filter.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" *ngIf=\"filter.icon\">{{filter.icon}}</mat-icon>\n                <span>{{filter.title}}</span>\n            </a>\n        </div>\n\n        <div class=\"nav-subheader\">TAGS</div>\n\n        <div class=\"nav-item\" *ngFor=\"let tag of tags\">\n            <a class=\"nav-link\" matRipple [routerLink]=\"'/apps/todo/tag/' + tag.handle\"\n               [routerLinkActive]=\"['active', 'accent']\">\n                <mat-icon class=\"nav-link-icon\" [ngStyle]=\"{'color':tag.color}\">label</mat-icon>\n                <span>{{tag.title}}</span>\n            </a>\n        </div>\n\n    </div>\n\n</div>\n<!-- / SIDEBAR CONTENT -->\n","import { Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { FuseUtils } from '@fuse/utils';\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo-details',\n    templateUrl  : './todo-details.component.html',\n    styleUrls    : ['./todo-details.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoDetailsComponent implements OnInit, OnDestroy\n{\n    todo: Todo;\n    tags: any[];\n    formType: string;\n    todoForm: FormGroup;\n\n    @ViewChild('titleInput')\n    titleInputField;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {FormBuilder} _formBuilder\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _formBuilder: FormBuilder\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update the current todo\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([todo, formType]) => {\n\n                if ( todo && formType === 'edit' )\n                {\n                    this.formType = 'edit';\n                    this.todo = todo;\n                    this.todoForm = this.createTodoForm();\n\n                    this.todoForm.valueChanges\n                        .pipe(\n                            takeUntil(this._unsubscribeAll),\n                            debounceTime(500),\n                            distinctUntilChanged()\n                        )\n                        .subscribe(data => {\n                            this._todoService.updateTodo(data);\n                        });\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(labels => {\n                this.tags = labels;\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onNewTodoClicked\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(() => {\n                this.todo = new Todo({});\n                this.todo.id = FuseUtils.generateGUID();\n                this.formType = 'new';\n                this.todoForm = this.createTodoForm();\n                this.focusTitleField();\n                this._todoService.onCurrentTodoChanged.next([this.todo, 'new']);\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Focus title field\n     */\n    focusTitleField(): void\n    {\n        setTimeout(() => {\n            this.titleInputField.nativeElement.focus();\n        });\n    }\n\n    /**\n     * Create todo form\n     *\n     * @returns {FormGroup}\n     */\n    createTodoForm(): FormGroup\n    {\n        return this._formBuilder.group({\n            id       : [this.todo.id],\n            title    : [this.todo.title],\n            notes    : [this.todo.notes],\n            startDate: [this.todo.startDate],\n            dueDate  : [this.todo.dueDate],\n            completed: [this.todo.completed],\n            starred  : [this.todo.starred],\n            important: [this.todo.important],\n            deleted  : [this.todo.deleted],\n            tags     : [this.todo.tags]\n        });\n    }\n\n    /**\n     * Toggle star\n     *\n     * @param event\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle important\n     *\n     * @param event\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     *\n     * @param event\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Deleted\n     *\n     * @param event\n     */\n    toggleDeleted(event): void\n    {\n        event.stopPropagation();\n        this.todo.toggleDeleted();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     */\n    toggleTagOnTodo(tagId): void\n    {\n        this._todoService.toggleTagOnTodo(tagId, this.todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @returns {any}\n     */\n    hasTag(tagId): any\n    {\n        return this._todoService.hasTag(tagId, this.todo);\n    }\n\n    /**\n     * Add todo\n     */\n    addTodo(): void\n    {\n        this._todoService.updateTodo(this.todoForm.getRawValue());\n    }\n}\n","<div *ngIf=\"!todo\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlex>\n    <mat-icon class=\"s-120 mb-12 select-todo-icon hint-text\"\n              [@animate]=\"{value:'*',params:{delay:'300ms',scale:'0.2'}}\">check_box\n    </mat-icon>\n    <span class=\"hint-text mat-h1 select-todo-text\" [@animate]=\"{value:'*',params:{delay:'400ms'}}\">\n        Select a todo\n    </span>\n</div>\n\n<div *ngIf=\"todo\">\n\n    <div class=\"todo-header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n\n        <button mat-button class=\"toggle-complete-button\" (click)=\"toggleCompleted($event)\"\n                aria-label=\"Toggle completed\" fxFlex=\"0 1 auto\">\n            <mat-icon *ngIf=\"todo.completed\">check_box</mat-icon>\n            <mat-icon *ngIf=\"!todo.completed\">check_box_outline_blank</mat-icon>\n            <span class=\"ml-8\">Mark as Done</span>\n        </button>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\" aria-label=\"Toggle important\">\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleStar($event)\" aria-label=\"Toggle star\">\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" fxFlex=\"0 1 auto\">\n                <mat-icon class=\"secondary-text\">label</mat-icon>\n            </button>\n\n            <mat-menu #labelMenu=\"matMenu\">\n                <button mat-menu-item *ngFor=\"let tag of tags\"\n                        (click)=\"toggleTagOnTodo(tag.id)\">\n                    <mat-icon *ngIf=\"hasTag(tag.id)\">check</mat-icon>\n                    <mat-icon *ngIf=\"!hasTag(tag.id)\"></mat-icon>\n                    <span>{{tag.title}}</span>\n                </button>\n            </mat-menu>\n\n            <button mat-icon-button (click)=\"toggleDeleted($event)\" aria-label=\"Toggle delete\">\n                <mat-icon class=\"secondary-text\" *ngIf=\"todo.deleted\">delete_forever</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.deleted\">delete</mat-icon>\n            </button>\n\n        </div>\n    </div>\n\n    <div class=\"todo-content\">\n\n        <form [formGroup]=\"todoForm\" (submit)=\"addTodo()\">\n\n            <div class=\"tags mb-24\" fxFlexFill fxLayout=\"row wrap\">\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\n                </div>\n            </div>\n\n            <mat-form-field appearance=\"outline\" class=\"title mt-8\" fxFill>\n                <mat-label>Title</mat-label>\n                <textarea matInput\n                          #titleInput\n                          name=\"title\"\n                          formControlName=\"title\"\n                          required>\n                </textarea>\n            </mat-form-field>\n\n            <div class=\"dates\" fxFlexFill fxLayout=\"column\" fxLayout.gt-xs=\"row\">\n\n                <mat-form-field appearance=\"outline\" class=\"mr-sm-12\" fxFlex>\n                    <mat-label>Start Date</mat-label>\n                    <input matInput [matDatepicker]=\"startDatePicker\">\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startDatePicker></mat-datepicker>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"outline\" class=\"ml-sm-12\" fxFlex>\n                    <mat-label>Due Date</mat-label>\n                    <input matInput [matDatepicker]=\"dueDatePicker\" placeholder=\"Due Date\">\n                    <mat-datepicker-toggle matSuffix [for]=\"dueDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #dueDatePicker></mat-datepicker>\n                </mat-form-field>\n\n            </div>\n\n            <mat-form-field appearance=\"outline\" fxFill>\n                <mat-label>Notes</mat-label>\n                <textarea matInput #notes\n                          name=\"notes\"\n                          formControlName=\"notes\"\n                          maxlength=\"500\">\n                </textarea>\n                <mat-hint align=\"end\">{{notes.value.length}} / 500</mat-hint>\n            </mat-form-field>\n\n            <button *ngIf=\"formType === 'new'\"\n                    mat-raised-button color=\"accent\"\n                    [disabled]=\"todoForm.invalid\">\n                SAVE\n            </button>\n        </form>\n\n    </div>\n</div>\n","import { Component, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list-item',\n    templateUrl  : './todo-list-item.component.html',\n    styleUrls    : ['./todo-list-item.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TodoListItemComponent implements OnInit, OnDestroy\n{\n    tags: any[];\n\n    @Input()\n    todo: Todo;\n\n    @HostBinding('class.selected')\n    selected: boolean;\n\n    @HostBinding('class.completed')\n    completed: boolean;\n\n    @HostBinding('class.move-disabled')\n    moveDisabled: boolean;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {TodoService} _todoService\n     * @param {ActivatedRoute} _activatedRoute\n     */\n    constructor(\n        private _todoService: TodoService,\n        private _activatedRoute: ActivatedRoute\n    )\n    {\n        // Disable move if path is not /all\n        if ( _activatedRoute.snapshot.url[0].path !== 'all' )\n        {\n            this.moveDisabled = true;\n        }\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the initial values\n        this.todo = new Todo(this.todo);\n        this.completed = this.todo.completed;\n\n        // Subscribe to update on selected todo change\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n                this.selected = false;\n\n                if ( selectedTodos.length > 0 )\n                {\n                    for ( const todo of selectedTodos )\n                    {\n                        if ( todo.id === this.todo.id )\n                        {\n                            this.selected = true;\n                            break;\n                        }\n                    }\n                }\n            });\n\n        // Subscribe to update on tag change\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = tags;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On selected change\n     */\n    onSelectedChange(): void\n    {\n        this._todoService.toggleSelectedTodo(this.todo.id);\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleStar();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Important\n     */\n    toggleImportant(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleImportant();\n        this._todoService.updateTodo(this.todo);\n    }\n\n    /**\n     * Toggle Completed\n     */\n    toggleCompleted(event): void\n    {\n        event.stopPropagation();\n\n        this.todo.toggleCompleted();\n        this._todoService.updateTodo(this.todo);\n    }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n    <mat-icon class=\"handle mr-16\" ngxDragHandle fxFlex=\"0 1 auto\" fxHide.xs>\n        drag_handle\n    </mat-icon>\n\n    <mat-checkbox [(ngModel)]=\"selected\" (ngModelChange)=\"onSelectedChange()\"\n                  class=\"mr-16\" fxFlex=\"0 1 auto\" (click)=\"$event.stopPropagation()\">\n    </mat-checkbox>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxFlex>\n\n        <div class=\"info\" fxFlex fxFlexLayout=\"column\">\n\n            <div class=\"title\">\n                {{todo.title}}\n            </div>\n\n            <div class=\"notes\">\n                {{todo.notes}}\n            </div>\n\n            <div class=\"tags\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\n\n                <div class=\"tag\" fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let tagId of todo.tags\">\n                    <div class=\"tag-color\" [ngStyle]=\"{'background-color': tags | getById:tagId:'color'}\"></div>\n                    <div class=\"tag-label\">{{tags | getById:tagId:'title'}}</div>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <button mat-icon-button (click)=\"toggleImportant($event)\"\n                    aria-label=\"Toggle important\" fxHide.xs>\n                <mat-icon class=\"red-fg\" *ngIf=\"todo.important\">error</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.important\">error_outline</mat-icon>\n            </button>\n\n            <button mat-icon-button (click)=\"toggleStar($event)\"\n                    aria-label=\"Toggle star\" fxHide.xs>\n                <mat-icon class=\"amber-fg\" *ngIf=\"todo.starred\">star</mat-icon>\n                <mat-icon class=\"secondary-text\" *ngIf=\"!todo.starred\">star_border</mat-icon>\n            </button>\n\n            <button mat-icon-button [matMenuTriggerFor]=\"moreMenu\" aria-label=\"More\" (click)=\"$event.stopPropagation()\"\n                    fxHide.xs>\n                <mat-icon class=\"secondary-text\">more_vert</mat-icon>\n            </button>\n\n            <mat-menu #moreMenu=\"matMenu\">\n                <button mat-menu-item aria-label=\"toggle done\" (click)=\"toggleCompleted($event)\">\n                    <ng-container *ngIf=\"todo.completed\">\n                        <mat-icon>check_box</mat-icon>\n                        <span>Mark as undone</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.completed\">\n                        <mat-icon>check_box_outline_blank</mat-icon>\n                        <span>Mark as done</span>\n                    </ng-container>\n                </button>\n\n                <button mat-menu-item aria-label=\"toggle important\" (click)=\"toggleImportant($event)\">\n                    <ng-container *ngIf=\"todo.important\">\n                        <mat-icon>error</mat-icon>\n                        <span>Remove important</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.important\">\n                        <mat-icon>error_outline</mat-icon>\n                        <span>Mark as important</span>\n                    </ng-container>\n                </button>\n\n                <button mat-menu-item aria-label=\"toggle star\" (click)=\"toggleStar($event)\">\n                    <ng-container *ngIf=\"todo.starred\">\n                        <mat-icon>star</mat-icon>\n                        <span>Remove star</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"!todo.starred\">\n                        <mat-icon>star_border</mat-icon>\n                        <span>Add star</span>\n                    </ng-container>\n                </button>\n            </mat-menu>\n\n        </div>\n\n    </div>\n\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { fuseAnimations } from '@fuse/animations';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector     : 'todo-list',\n    templateUrl  : './todo-list.component.html',\n    styleUrls    : ['./todo-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoListComponent implements OnInit, OnDestroy\n{\n    todos: Todo[];\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {TodoService} _todoService\n     * @param {Location} _location\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _todoService: TodoService,\n        private _location: Location\n    )\n    {\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to update todos on changes\n        this._todoService.onTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(todos => {\n                this.todos = todos;\n            });\n\n        // Subscribe to update current todo on changes\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(currentTodo => {\n                if ( !currentTodo )\n                {\n                    // Set the current todo id to null to deselect the current todo\n                    this.currentTodo = null;\n\n                    // Handle the location changes\n                    const tagHandle    = this._activatedRoute.snapshot.params.tagHandle,\n                          filterHandle = this._activatedRoute.snapshot.params.filterHandle;\n\n                    if ( tagHandle )\n                    {\n                        this._location.go('apps/todo/tag/' + tagHandle);\n                    }\n                    else if ( filterHandle )\n                    {\n                        this._location.go('apps/todo/filter/' + filterHandle);\n                    }\n                    else\n                    {\n                        this._location.go('apps/todo/all');\n                    }\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read todo\n     *\n     * @param todoId\n     */\n    readTodo(todoId): void\n    {\n        // Set current todo\n        this._todoService.setCurrentTodo(todoId);\n    }\n\n    /**\n     * On drop\n     *\n     * @param ev\n     */\n    onDrop(ev): void\n    {\n\n    }\n}\n","<div *ngIf=\"todos.length === 0\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFlexFill>\n    <span class=\"no-todos-text hint-text\">There are no todos!</span>\n</div>\n<div class=\"todo-list\" ngxDroppable [model]=\"todos\" (out)=\"onDrop($event)\" [@animateStagger]=\"{value:'50'}\">\n    <todo-list-item class=\"todo-list-item has-handle\"\n                    *ngFor=\"let todo of todos\" [todo]=\"todo\"\n                    ngxDraggable\n                    [model]=\"todo\"\n                    (click)=\"readTodo(todo.id)\"\n                    [ngClass]=\"{'current-todo':todo?.id == currentTodo?.id}\"\n                    [@animate]=\"{value:'*',params:{y:'100%'}}\">\n    </todo-list-item>\n</div>\n","import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseSidebarService } from '@fuse/components/sidebar/sidebar.service';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\nimport { TodoService } from 'app/main/apps/todo/todo.service';\n\n@Component({\n    selector     : 'todo',\n    templateUrl  : './todo.component.html',\n    styleUrls    : ['./todo.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class TodoComponent implements OnInit, OnDestroy\n{\n    hasSelectedTodos: boolean;\n    isIndeterminate: boolean;\n    filters: any[];\n    tags: any[];\n    searchInput: FormControl;\n    currentTodo: Todo;\n\n    // Private\n    private _unsubscribeAll: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {FuseSidebarService} _fuseSidebarService\n     * @param {TodoService} _todoService\n     */\n    constructor(\n        private _fuseSidebarService: FuseSidebarService,\n        private _todoService: TodoService\n    )\n    {\n        // Set the defaults\n        this.searchInput = new FormControl('');\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        this._todoService.onSelectedTodosChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(selectedTodos => {\n\n                setTimeout(() => {\n                    this.hasSelectedTodos = selectedTodos.length > 0;\n                    this.isIndeterminate = (selectedTodos.length !== this._todoService.todos.length && selectedTodos.length > 0);\n                }, 0);\n            });\n\n        this._todoService.onFiltersChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(folders => {\n                this.filters = this._todoService.filters;\n            });\n\n        this._todoService.onTagsChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(tags => {\n                this.tags = this._todoService.tags;\n            });\n\n        this.searchInput.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(300),\n                distinctUntilChanged()\n            )\n            .subscribe(searchText => {\n                this._todoService.onSearchTextChanged.next(searchText);\n            });\n\n        this._todoService.onCurrentTodoChanged\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([currentTodo, formType]) => {\n                if ( !currentTodo )\n                {\n                    this.currentTodo = null;\n                }\n                else\n                {\n                    this.currentTodo = currentTodo;\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Deselect current todo\n     */\n    deselectCurrentTodo(): void\n    {\n        this._todoService.onCurrentTodoChanged.next([null, null]);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        this._todoService.toggleSelectAll();\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this._todoService.selectTodos(filterParameter, filterValue);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this._todoService.deselectTodos();\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this._todoService.toggleTagOnSelectedTodos(tagId);\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void\n    {\n        this._fuseSidebarService.getSidebar(name).toggleOpen();\n    }\n}\n","<div id=\"todo\" class=\"page-layout carded left-sidebar inner-scroll\">\n\n    <!-- TOP BACKGROUND -->\n    <div class=\"top-bg accent\"></div>\n    <!-- / TOP BACKGROUND -->\n\n    <!-- SIDEBAR -->\n    <fuse-sidebar class=\"sidebar\" name=\"todo-main-sidebar\" position=\"left\" lockedOpen=\"gt-md\">\n        <todo-main-sidebar></todo-main-sidebar>\n    </fuse-sidebar>\n    <!-- / SIDEBAR -->\n\n    <!-- CENTER -->\n    <div class=\"center\">\n\n        <!-- CONTENT HEADER -->\n        <div class=\"header\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n            <div class=\"search-wrapper\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\n                <button mat-icon-button class=\"sidebar-toggle\" fxHide.gt-md\n                        (click)=\"toggleSidebar('todo-main-sidebar')\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n\n                <div class=\"search\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-icon class=\"secondary-text\">search</mat-icon>\n                    <input [formControl]=\"searchInput\" placeholder=\"Search for a task\" fxFlex>\n                </div>\n\n            </div>\n\n        </div>\n        <!-- / CONTENT HEADER -->\n\n        <!-- CONTENT CARD -->\n        <div class=\"content-card\" [ngClass]=\"{'current-todo-selected':currentTodo}\">\n\n            <!-- CONTENT TOOLBAR -->\n            <div class=\"toolbar px-24 py-8\">\n\n                <div class=\"todo-selection\" fxFlex=\"row\" fxLayoutAlign=\"start center\">\n                    <mat-checkbox (click)=\"toggleSelectAll()\" [checked]=\"hasSelectedTodos\"\n                                  [indeterminate]=\"isIndeterminate\"></mat-checkbox>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"selectMenu\">\n                        <mat-icon>arrow_drop_down</mat-icon>\n                    </button>\n                    <mat-menu #selectMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"selectTodos()\">All</button>\n                        <button mat-menu-item (click)=\"deselectTodos()\">None</button>\n                        <button mat-menu-item (click)=\"selectTodos('read', true)\">Read</button>\n                        <button mat-menu-item (click)=\"selectTodos('read', false)\">Unread</button>\n                        <button mat-menu-item (click)=\"selectTodos('starred', true)\">Starred</button>\n                        <button mat-menu-item (click)=\"selectTodos('starred', false)\">Unstarred</button>\n                        <button mat-menu-item (click)=\"selectTodos('important', true)\">Important</button>\n                        <button mat-menu-item (click)=\"selectTodos('important', false)\">Unimportant</button>\n                    </mat-menu>\n\n                    <div class=\"toolbar-separator\" *ngIf=\"hasSelectedTodos\"></div>\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"labelMenu\" *ngIf=\"hasSelectedTodos\">\n                        <mat-icon class=\"secondary-text\">label</mat-icon>\n                    </button>\n                    <mat-menu #labelMenu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let tag of tags\" (click)=\"toggleTagOnSelectedTodos(tag.id)\">\n                            {{tag.title}}\n                        </button>\n                    </mat-menu>\n                </div>\n\n                <div *ngIf=\"currentTodo\" fxHide.gt-lg>\n                    <button mat-icon-button (click)=\"deselectCurrentTodo()\">\n                        <mat-icon class=\"secondary-text\">arrow_back</mat-icon>\n                    </button>\n                </div>\n\n            </div>\n            <!-- / CONTENT TOOLBAR -->\n\n            <!-- CONTENT -->\n            <div class=\"content\" fxFlexAlign=\"row\">\n                <todo-list fusePerfectScrollbar fxFlex></todo-list>\n                <todo-details fusePerfectScrollbar fxFlex></todo-details>\n            </div>\n            <!-- / CONTENT -->\n\n        </div>\n        <!-- / CONTENT CARD -->\n\n    </div>\n    <!-- / CENTER -->\n\n</div>\n","export class Todo\n{\n    id: string;\n    title: string;\n    notes: string;\n    startDate: string;\n    dueDate: boolean;\n    completed: boolean;\n    starred: boolean;\n    important: boolean;\n    deleted: boolean;\n    tags: [\n        {\n            'id': number,\n            'name': string,\n            'label': string,\n            'color': string\n        }\n        ];\n\n    /**\n     * Constructor\n     *\n     * @param todo\n     */\n    constructor(todo)\n    {\n        {\n            this.id = todo.id;\n            this.title = todo.title;\n            this.notes = todo.notes;\n            this.startDate = todo.startDate;\n            this.dueDate = todo.dueDate;\n            this.completed = todo.completed;\n            this.starred = todo.starred;\n            this.important = todo.important;\n            this.deleted = todo.deleted;\n            this.tags = todo.tags || [];\n        }\n    }\n\n    /**\n     * Toggle star\n     */\n    toggleStar(): void\n    {\n        this.starred = !this.starred;\n    }\n\n    /**\n     * Toggle important\n     */\n    toggleImportant(): void\n    {\n        this.important = !this.important;\n    }\n\n    /**\n     * Toggle completed\n     */\n    toggleCompleted(): void\n    {\n        this.completed = !this.completed;\n    }\n\n    /**\n     * Toggle deleted\n     */\n    toggleDeleted(): void\n    {\n        this.deleted = !this.deleted;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgxDnDModule } from '@swimlane/ngx-dnd';\n\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { FuseSidebarModule } from '@fuse/components';\n\nimport { TodoService } from 'app/main/apps/todo/todo.service';\nimport { TodoComponent } from 'app/main/apps/todo/todo.component';\nimport { TodoMainSidebarComponent } from 'app/main/apps/todo/sidebars/main/main-sidebar.component';\nimport { TodoListItemComponent } from 'app/main/apps/todo/todo-list/todo-list-item/todo-list-item.component';\nimport { TodoListComponent } from 'app/main/apps/todo/todo-list/todo-list.component';\nimport { TodoDetailsComponent } from 'app/main/apps/todo/todo-details/todo-details.component';\n\nconst routes: Routes = [\n    {\n        path     : 'all',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'all/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'tag/:tagHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path     : 'filter/:filterHandle/:todoId',\n        component: TodoComponent,\n        resolve  : {\n            todo: TodoService\n        }\n    },\n    {\n        path      : '**',\n        redirectTo: 'all'\n    }\n];\n\n@NgModule({\n    declarations: [\n        TodoComponent,\n        TodoMainSidebarComponent,\n        TodoListItemComponent,\n        TodoListComponent,\n        TodoDetailsComponent\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatRippleModule,\n        MatSelectModule,\n\n        NgxDnDModule,\n\n        FuseSharedModule,\n        FuseSidebarModule\n    ],\n    providers   : [\n        TodoService\n    ]\n})\nexport class TodoModule\n{\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { FuseUtils } from '@fuse/utils';\n\nimport { Todo } from 'app/main/apps/todo/todo.model';\n\n@Injectable()\nexport class TodoService implements Resolve<any>\n{\n    todos: Todo[];\n    selectedTodos: Todo[];\n    currentTodo: Todo;\n    searchText: string;\n    filters: any[];\n    tags: any[];\n    routeParams: any;\n\n    onTodosChanged: BehaviorSubject<any>;\n    onSelectedTodosChanged: BehaviorSubject<any>;\n    onCurrentTodoChanged: BehaviorSubject<any>;\n    onFiltersChanged: BehaviorSubject<any>;\n    onTagsChanged: BehaviorSubject<any>;\n    onSearchTextChanged: BehaviorSubject<any>;\n    onNewTodoClicked: Subject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     * @param {Location} _location\n     */\n    constructor(\n        private _httpClient: HttpClient,\n        private _location: Location\n    )\n    {\n        // Set the defaults\n        this.selectedTodos = [];\n        this.searchText = '';\n        this.onTodosChanged = new BehaviorSubject([]);\n        this.onSelectedTodosChanged = new BehaviorSubject([]);\n        this.onCurrentTodoChanged = new BehaviorSubject([]);\n        this.onFiltersChanged = new BehaviorSubject([]);\n        this.onTagsChanged = new BehaviorSubject([]);\n        this.onSearchTextChanged = new BehaviorSubject('');\n        this.onNewTodoClicked = new Subject();\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getFilters(),\n                this.getTags(),\n                this.getTodos()\n            ]).then(\n                () => {\n                    if ( this.routeParams.todoId )\n                    {\n                        this.setCurrentTodo(this.routeParams.todoId);\n                    }\n                    else\n                    {\n                        this.setCurrentTodo(null);\n                    }\n\n                    this.onSearchTextChanged.subscribe(searchText => {\n                        if ( searchText !== '' )\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                        else\n                        {\n                            this.searchText = searchText;\n                            this.getTodos();\n                        }\n                    });\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get all filters\n     *\n     * @returns {Promise<any>}\n     */\n    getFilters(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-filters')\n                .subscribe((response: any) => {\n                    this.filters = response;\n                    this.onFiltersChanged.next(this.filters);\n                    resolve(this.filters);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get all tags\n     *\n     * @returns {Promise<any>}\n     */\n    getTags(): Promise<any>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags')\n                .subscribe((response: any) => {\n                    this.tags = response;\n                    this.onTagsChanged.next(this.tags);\n                    resolve(this.tags);\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos\n     *\n     * @returns {Promise<Todo[]>}\n     */\n    getTodos(): Promise<Todo[]>\n    {\n        if ( this.routeParams.tagHandle )\n        {\n            return this.getTodosByTag(this.routeParams.tagHandle);\n        }\n\n        if ( this.routeParams.filterHandle )\n        {\n            return this.getTodosByFilter(this.routeParams.filterHandle);\n        }\n\n        return this.getTodosByParams(this.routeParams);\n    }\n\n    /**\n     * Get todos by params\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByParams(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos')\n                .subscribe((todos: any) => {\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n                });\n        });\n    }\n\n    /**\n     * Get todos by filter\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByFilter(handle): Promise<Todo[]>\n    {\n\n        let param = handle + '=true';\n\n        if ( handle === 'dueDate' )\n        {\n            param = handle + '=^$|\\\\s+';\n        }\n\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.get('api/todo-todos?' + param)\n                .subscribe((todos: any) => {\n\n                    this.todos = todos.map(todo => {\n                        return new Todo(todo);\n                    });\n\n                    this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                    this.onTodosChanged.next(this.todos);\n\n                    resolve(this.todos);\n\n                }, reject);\n        });\n    }\n\n    /**\n     * Get todos by tag\n     *\n     * @param handle\n     * @returns {Promise<Todo[]>}\n     */\n    getTodosByTag(handle): Promise<Todo[]>\n    {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/todo-tags?handle=' + handle)\n                .subscribe((tags: any) => {\n\n                    const tagId = tags[0].id;\n\n                    this._httpClient.get('api/todo-todos?tags=' + tagId)\n                        .subscribe((todos: any) => {\n\n                            this.todos = todos.map(todo => {\n                                return new Todo(todo);\n                            });\n\n                            this.todos = FuseUtils.filterArrayByString(this.todos, this.searchText);\n\n                            this.onTodosChanged.next(this.todos);\n\n                            resolve(this.todos);\n\n                        }, reject);\n                });\n        });\n    }\n\n    /**\n     * Toggle selected todo by id\n     *\n     * @param id\n     */\n    toggleSelectedTodo(id): void\n    {\n        // First, check if we already have that todo as selected...\n        if ( this.selectedTodos.length > 0 )\n        {\n            for ( const todo of this.selectedTodos )\n            {\n                // ...delete the selected todo\n                if ( todo.id === id )\n                {\n                    const index = this.selectedTodos.indexOf(todo);\n\n                    if ( index !== -1 )\n                    {\n                        this.selectedTodos.splice(index, 1);\n\n                        // Trigger the next event\n                        this.onSelectedTodosChanged.next(this.selectedTodos);\n\n                        // Return\n                        return;\n                    }\n                }\n            }\n        }\n\n        // If we don't have it, push as selected\n        this.selectedTodos.push(\n            this.todos.find(todo => {\n                return todo.id === id;\n            })\n        );\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Toggle select all\n     */\n    toggleSelectAll(): void\n    {\n        if ( this.selectedTodos.length > 0 )\n        {\n            this.deselectTodos();\n        }\n        else\n        {\n            this.selectTodos();\n        }\n\n    }\n\n    /**\n     * Select todos\n     *\n     * @param filterParameter\n     * @param filterValue\n     */\n    selectTodos(filterParameter?, filterValue?): void\n    {\n        this.selectedTodos = [];\n\n        // If there is no filter, select all todos\n        if ( filterParameter === undefined || filterValue === undefined )\n        {\n            this.selectedTodos = this.todos;\n        }\n        else\n        {\n            this.selectedTodos.push(...\n                this.todos.filter(todo => {\n                    return todo[filterParameter] === filterValue;\n                })\n            );\n        }\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Deselect todos\n     */\n    deselectTodos(): void\n    {\n        this.selectedTodos = [];\n\n        // Trigger the next event\n        this.onSelectedTodosChanged.next(this.selectedTodos);\n    }\n\n    /**\n     * Set current todo by id\n     *\n     * @param id\n     */\n    setCurrentTodo(id): void\n    {\n        this.currentTodo = this.todos.find(todo => {\n            return todo.id === id;\n        });\n\n        this.onCurrentTodoChanged.next([this.currentTodo, 'edit']);\n\n        const tagHandle    = this.routeParams.tagHandle,\n              filterHandle = this.routeParams.filterHandle;\n\n        if ( tagHandle )\n        {\n            this._location.go('apps/todo/tag/' + tagHandle + '/' + id);\n        }\n        else if ( filterHandle )\n        {\n            this._location.go('apps/todo/filter/' + filterHandle + '/' + id);\n        }\n        else\n        {\n            this._location.go('apps/todo/all/' + id);\n        }\n    }\n\n    /**\n     * Toggle tag on selected todos\n     *\n     * @param tagId\n     */\n    toggleTagOnSelectedTodos(tagId): void\n    {\n        this.selectedTodos.map(todo => {\n            this.toggleTagOnTodo(tagId, todo);\n        });\n    }\n\n    /**\n     * Toggle tag on todo\n     *\n     * @param tagId\n     * @param todo\n     */\n    toggleTagOnTodo(tagId, todo): void\n    {\n        const index = todo.tags.indexOf(tagId);\n\n        if ( index !== -1 )\n        {\n            todo.tags.splice(index, 1);\n        }\n        else\n        {\n            todo.tags.push(tagId);\n        }\n\n        this.updateTodo(todo);\n    }\n\n    /**\n     * Has tag?\n     *\n     * @param tagId\n     * @param todo\n     * @returns {boolean}\n     */\n    hasTag(tagId, todo): any\n    {\n        if ( !todo.tags )\n        {\n            return false;\n        }\n\n        return todo.tags.indexOf(tagId) !== -1;\n    }\n\n    /**\n     * Update the todo\n     *\n     * @param todo\n     * @returns {Promise<any>}\n     */\n    updateTodo(todo): any\n    {\n        return new Promise((resolve, reject) => {\n\n            this._httpClient.post('api/todo-todos/' + todo.id, {...todo})\n                .subscribe(response => {\n\n                    this.getTodos().then(todos => {\n\n                        resolve(todos);\n\n                    }, reject);\n                });\n        });\n    }\n}\n"]}